{"ast":null,"code":"import { isObject, isPromise, isFunction, getRootScrollTop, setRootScrollTop } from \"../utils/index.mjs\";\n\nfunction isEmptyValue(value) {\n  if (Array.isArray(value)) {\n    return !value.length;\n  }\n\n  if (value === 0) {\n    return false;\n  }\n\n  return !value;\n}\n\nfunction runSyncRule(value, rule) {\n  if (rule.required && isEmptyValue(value)) {\n    return false;\n  }\n\n  if (rule.pattern && !rule.pattern.test(String(value))) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction runRuleValidator(value, rule) {\n  return new Promise(resolve => {\n    const returnVal = rule.validator(value, rule);\n\n    if (isPromise(returnVal)) {\n      returnVal.then(resolve);\n      return;\n    }\n\n    resolve(returnVal);\n  });\n}\n\nfunction getRuleMessage(value, rule) {\n  const {\n    message\n  } = rule;\n\n  if (isFunction(message)) {\n    return message(value, rule);\n  }\n\n  return message || \"\";\n}\n\nfunction startComposing({\n  target\n}) {\n  target.composing = true;\n}\n\nfunction endComposing({\n  target\n}) {\n  if (target.composing) {\n    target.composing = false;\n    target.dispatchEvent(new Event(\"input\"));\n  }\n}\n\nfunction resizeTextarea(input, autosize) {\n  const scrollTop = getRootScrollTop();\n  input.style.height = \"auto\";\n  let height = input.scrollHeight;\n\n  if (isObject(autosize)) {\n    const {\n      maxHeight,\n      minHeight\n    } = autosize;\n\n    if (maxHeight !== void 0) {\n      height = Math.min(height, maxHeight);\n    }\n\n    if (minHeight !== void 0) {\n      height = Math.max(height, minHeight);\n    }\n  }\n\n  if (height) {\n    input.style.height = `${height}px`;\n    setRootScrollTop(scrollTop);\n  }\n}\n\nfunction mapInputType(type) {\n  if (type === \"number\") {\n    return {\n      type: \"text\",\n      inputmode: \"decimal\"\n    };\n  }\n\n  if (type === \"digit\") {\n    return {\n      type: \"tel\",\n      inputmode: \"numeric\"\n    };\n  }\n\n  return {\n    type\n  };\n}\n\nfunction getStringLength(str) {\n  return [...str].length;\n}\n\nfunction cutString(str, maxlength) {\n  return [...str].slice(0, maxlength).join(\"\");\n}\n\nexport { cutString, endComposing, getRuleMessage, getStringLength, mapInputType, resizeTextarea, runRuleValidator, runSyncRule, startComposing };","map":{"version":3,"names":["isObject","isPromise","isFunction","getRootScrollTop","setRootScrollTop","isEmptyValue","value","Array","isArray","length","runSyncRule","rule","required","pattern","test","String","runRuleValidator","Promise","resolve","returnVal","validator","then","getRuleMessage","message","startComposing","target","composing","endComposing","dispatchEvent","Event","resizeTextarea","input","autosize","scrollTop","style","height","scrollHeight","maxHeight","minHeight","Math","min","max","mapInputType","type","inputmode","getStringLength","str","cutString","maxlength","slice","join"],"sources":["D:/web/my-blog/node_modules/vant/es/field/utils.mjs"],"sourcesContent":["import {\n  isObject,\n  isPromise,\n  isFunction,\n  getRootScrollTop,\n  setRootScrollTop\n} from \"../utils/index.mjs\";\nfunction isEmptyValue(value) {\n  if (Array.isArray(value)) {\n    return !value.length;\n  }\n  if (value === 0) {\n    return false;\n  }\n  return !value;\n}\nfunction runSyncRule(value, rule) {\n  if (rule.required && isEmptyValue(value)) {\n    return false;\n  }\n  if (rule.pattern && !rule.pattern.test(String(value))) {\n    return false;\n  }\n  return true;\n}\nfunction runRuleValidator(value, rule) {\n  return new Promise((resolve) => {\n    const returnVal = rule.validator(value, rule);\n    if (isPromise(returnVal)) {\n      returnVal.then(resolve);\n      return;\n    }\n    resolve(returnVal);\n  });\n}\nfunction getRuleMessage(value, rule) {\n  const { message } = rule;\n  if (isFunction(message)) {\n    return message(value, rule);\n  }\n  return message || \"\";\n}\nfunction startComposing({ target }) {\n  target.composing = true;\n}\nfunction endComposing({ target }) {\n  if (target.composing) {\n    target.composing = false;\n    target.dispatchEvent(new Event(\"input\"));\n  }\n}\nfunction resizeTextarea(input, autosize) {\n  const scrollTop = getRootScrollTop();\n  input.style.height = \"auto\";\n  let height = input.scrollHeight;\n  if (isObject(autosize)) {\n    const { maxHeight, minHeight } = autosize;\n    if (maxHeight !== void 0) {\n      height = Math.min(height, maxHeight);\n    }\n    if (minHeight !== void 0) {\n      height = Math.max(height, minHeight);\n    }\n  }\n  if (height) {\n    input.style.height = `${height}px`;\n    setRootScrollTop(scrollTop);\n  }\n}\nfunction mapInputType(type) {\n  if (type === \"number\") {\n    return {\n      type: \"text\",\n      inputmode: \"decimal\"\n    };\n  }\n  if (type === \"digit\") {\n    return {\n      type: \"tel\",\n      inputmode: \"numeric\"\n    };\n  }\n  return { type };\n}\nfunction getStringLength(str) {\n  return [...str].length;\n}\nfunction cutString(str, maxlength) {\n  return [...str].slice(0, maxlength).join(\"\");\n}\nexport {\n  cutString,\n  endComposing,\n  getRuleMessage,\n  getStringLength,\n  mapInputType,\n  resizeTextarea,\n  runRuleValidator,\n  runSyncRule,\n  startComposing\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\nimport { extend, isObject, inBrowser, withInstall } from \"../utils/index.mjs\";\nimport { mountComponent, usePopupState } from \"../utils/mount-component.mjs\";\nimport VanNotify from \"./Notify.mjs\";\nlet timer;\nlet instance;\n\nconst parseOptions = message => isObject(message) ? message : {\n  message\n};\n\nfunction initInstance() {\n  ({\n    instance\n  } = mountComponent({\n    setup() {\n      const {\n        state,\n        toggle\n      } = usePopupState();\n      return () => _createVNode(VanNotify, _mergeProps(state, {\n        \"onUpdate:show\": toggle\n      }), null);\n    }\n\n  }));\n}\n\nfunction Notify(options) {\n  if (!inBrowser) {\n    return;\n  }\n\n  if (!instance) {\n    initInstance();\n  }\n\n  options = extend({}, Notify.currentOptions, parseOptions(options));\n  instance.open(options);\n  clearTimeout(timer);\n\n  if (options.duration > 0) {\n    timer = window.setTimeout(Notify.clear, options.duration);\n  }\n\n  return instance;\n}\n\nconst getDefaultOptions = () => ({\n  type: \"danger\",\n  color: void 0,\n  message: \"\",\n  onClose: void 0,\n  onClick: void 0,\n  onOpened: void 0,\n  duration: 3e3,\n  position: void 0,\n  className: \"\",\n  lockScroll: false,\n  background: void 0\n});\n\nNotify.clear = () => {\n  if (instance) {\n    instance.toggle(false);\n  }\n};\n\nNotify.currentOptions = getDefaultOptions();\n\nNotify.setDefaultOptions = options => {\n  extend(Notify.currentOptions, options);\n};\n\nNotify.resetDefaultOptions = () => {\n  Notify.currentOptions = getDefaultOptions();\n};\n\nNotify.Component = withInstall(VanNotify);\n\nNotify.install = app => {\n  app.use(Notify.Component);\n  app.config.globalProperties.$notify = Notify;\n};\n\nexport { Notify };","map":{"version":3,"names":["createVNode","_createVNode","mergeProps","_mergeProps","extend","isObject","inBrowser","withInstall","mountComponent","usePopupState","VanNotify","timer","instance","parseOptions","message","initInstance","setup","state","toggle","Notify","options","currentOptions","open","clearTimeout","duration","window","setTimeout","clear","getDefaultOptions","type","color","onClose","onClick","onOpened","position","className","lockScroll","background","setDefaultOptions","resetDefaultOptions","Component","install","app","use","config","globalProperties","$notify"],"sources":["D:/web/my-blog/node_modules/vant/es/notify/function-call.mjs"],"sourcesContent":["import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\nimport { extend, isObject, inBrowser, withInstall } from \"../utils/index.mjs\";\nimport { mountComponent, usePopupState } from \"../utils/mount-component.mjs\";\nimport VanNotify from \"./Notify.mjs\";\nlet timer;\nlet instance;\nconst parseOptions = (message) => isObject(message) ? message : {\n  message\n};\nfunction initInstance() {\n  ({\n    instance\n  } = mountComponent({\n    setup() {\n      const {\n        state,\n        toggle\n      } = usePopupState();\n      return () => _createVNode(VanNotify, _mergeProps(state, {\n        \"onUpdate:show\": toggle\n      }), null);\n    }\n  }));\n}\nfunction Notify(options) {\n  if (!inBrowser) {\n    return;\n  }\n  if (!instance) {\n    initInstance();\n  }\n  options = extend({}, Notify.currentOptions, parseOptions(options));\n  instance.open(options);\n  clearTimeout(timer);\n  if (options.duration > 0) {\n    timer = window.setTimeout(Notify.clear, options.duration);\n  }\n  return instance;\n}\nconst getDefaultOptions = () => ({\n  type: \"danger\",\n  color: void 0,\n  message: \"\",\n  onClose: void 0,\n  onClick: void 0,\n  onOpened: void 0,\n  duration: 3e3,\n  position: void 0,\n  className: \"\",\n  lockScroll: false,\n  background: void 0\n});\nNotify.clear = () => {\n  if (instance) {\n    instance.toggle(false);\n  }\n};\nNotify.currentOptions = getDefaultOptions();\nNotify.setDefaultOptions = (options) => {\n  extend(Notify.currentOptions, options);\n};\nNotify.resetDefaultOptions = () => {\n  Notify.currentOptions = getDefaultOptions();\n};\nNotify.Component = withInstall(VanNotify);\nNotify.install = (app) => {\n  app.use(Notify.Component);\n  app.config.globalProperties.$notify = Notify;\n};\nexport {\n  Notify\n};\n"],"mappings":"AAAA,SAASA,WAAW,IAAIC,YAAxB,EAAsCC,UAAU,IAAIC,WAApD,QAAuE,KAAvE;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,SAA3B,EAAsCC,WAAtC,QAAyD,oBAAzD;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,8BAA9C;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,IAAIC,KAAJ;AACA,IAAIC,QAAJ;;AACA,MAAMC,YAAY,GAAIC,OAAD,IAAaT,QAAQ,CAACS,OAAD,CAAR,GAAoBA,OAApB,GAA8B;EAC9DA;AAD8D,CAAhE;;AAGA,SAASC,YAAT,GAAwB;EACtB,CAAC;IACCH;EADD,IAEGJ,cAAc,CAAC;IACjBQ,KAAK,GAAG;MACN,MAAM;QACJC,KADI;QAEJC;MAFI,IAGFT,aAAa,EAHjB;MAIA,OAAO,MAAMR,YAAY,CAACS,SAAD,EAAYP,WAAW,CAACc,KAAD,EAAQ;QACtD,iBAAiBC;MADqC,CAAR,CAAvB,EAErB,IAFqB,CAAzB;IAGD;;EATgB,CAAD,CAFlB;AAaD;;AACD,SAASC,MAAT,CAAgBC,OAAhB,EAAyB;EACvB,IAAI,CAACd,SAAL,EAAgB;IACd;EACD;;EACD,IAAI,CAACM,QAAL,EAAe;IACbG,YAAY;EACb;;EACDK,OAAO,GAAGhB,MAAM,CAAC,EAAD,EAAKe,MAAM,CAACE,cAAZ,EAA4BR,YAAY,CAACO,OAAD,CAAxC,CAAhB;EACAR,QAAQ,CAACU,IAAT,CAAcF,OAAd;EACAG,YAAY,CAACZ,KAAD,CAAZ;;EACA,IAAIS,OAAO,CAACI,QAAR,GAAmB,CAAvB,EAA0B;IACxBb,KAAK,GAAGc,MAAM,CAACC,UAAP,CAAkBP,MAAM,CAACQ,KAAzB,EAAgCP,OAAO,CAACI,QAAxC,CAAR;EACD;;EACD,OAAOZ,QAAP;AACD;;AACD,MAAMgB,iBAAiB,GAAG,OAAO;EAC/BC,IAAI,EAAE,QADyB;EAE/BC,KAAK,EAAE,KAAK,CAFmB;EAG/BhB,OAAO,EAAE,EAHsB;EAI/BiB,OAAO,EAAE,KAAK,CAJiB;EAK/BC,OAAO,EAAE,KAAK,CALiB;EAM/BC,QAAQ,EAAE,KAAK,CANgB;EAO/BT,QAAQ,EAAE,GAPqB;EAQ/BU,QAAQ,EAAE,KAAK,CARgB;EAS/BC,SAAS,EAAE,EAToB;EAU/BC,UAAU,EAAE,KAVmB;EAW/BC,UAAU,EAAE,KAAK;AAXc,CAAP,CAA1B;;AAaAlB,MAAM,CAACQ,KAAP,GAAe,MAAM;EACnB,IAAIf,QAAJ,EAAc;IACZA,QAAQ,CAACM,MAAT,CAAgB,KAAhB;EACD;AACF,CAJD;;AAKAC,MAAM,CAACE,cAAP,GAAwBO,iBAAiB,EAAzC;;AACAT,MAAM,CAACmB,iBAAP,GAA4BlB,OAAD,IAAa;EACtChB,MAAM,CAACe,MAAM,CAACE,cAAR,EAAwBD,OAAxB,CAAN;AACD,CAFD;;AAGAD,MAAM,CAACoB,mBAAP,GAA6B,MAAM;EACjCpB,MAAM,CAACE,cAAP,GAAwBO,iBAAiB,EAAzC;AACD,CAFD;;AAGAT,MAAM,CAACqB,SAAP,GAAmBjC,WAAW,CAACG,SAAD,CAA9B;;AACAS,MAAM,CAACsB,OAAP,GAAkBC,GAAD,IAAS;EACxBA,GAAG,CAACC,GAAJ,CAAQxB,MAAM,CAACqB,SAAf;EACAE,GAAG,CAACE,MAAJ,CAAWC,gBAAX,CAA4BC,OAA5B,GAAsC3B,MAAtC;AACD,CAHD;;AAIA,SACEA,MADF"},"metadata":{},"sourceType":"module"}
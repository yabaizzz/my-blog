{"ast":null,"code":"import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\nimport { defineComponent } from \"vue\";\nimport { extend, createNamespace, unknownProp, numericProp } from \"../utils/index.mjs\";\nimport { ACTION_BAR_KEY } from \"../action-bar/ActionBar.mjs\";\nimport { useParent } from \"@vant/use\";\nimport { useRoute, routeProps } from \"../composables/use-route.mjs\";\nimport { Icon } from \"../icon/index.mjs\";\nimport { Badge } from \"../badge/index.mjs\";\nconst [name, bem] = createNamespace(\"action-bar-icon\");\nconst actionBarIconProps = extend({}, routeProps, {\n  dot: Boolean,\n  text: String,\n  icon: String,\n  color: String,\n  badge: numericProp,\n  iconClass: unknownProp,\n  badgeProps: Object,\n  iconPrefix: String\n});\nvar stdin_default = defineComponent({\n  name,\n  props: actionBarIconProps,\n\n  setup(props, {\n    slots\n  }) {\n    const route = useRoute();\n    useParent(ACTION_BAR_KEY);\n\n    const renderIcon = () => {\n      const {\n        dot,\n        badge,\n        icon,\n        color,\n        iconClass,\n        badgeProps,\n        iconPrefix\n      } = props;\n\n      if (slots.icon) {\n        return _createVNode(Badge, _mergeProps({\n          \"dot\": dot,\n          \"class\": bem(\"icon\"),\n          \"content\": badge\n        }, badgeProps), {\n          default: slots.icon\n        });\n      }\n\n      return _createVNode(Icon, {\n        \"tag\": \"div\",\n        \"dot\": dot,\n        \"name\": icon,\n        \"badge\": badge,\n        \"color\": color,\n        \"class\": [bem(\"icon\"), iconClass],\n        \"badgeProps\": badgeProps,\n        \"classPrefix\": iconPrefix\n      }, null);\n    };\n\n    return () => _createVNode(\"div\", {\n      \"role\": \"button\",\n      \"class\": bem(),\n      \"tabindex\": 0,\n      \"onClick\": route\n    }, [renderIcon(), slots.default ? slots.default() : props.text]);\n  }\n\n});\nexport { stdin_default as default };","map":{"version":3,"names":["createVNode","_createVNode","mergeProps","_mergeProps","defineComponent","extend","createNamespace","unknownProp","numericProp","ACTION_BAR_KEY","useParent","useRoute","routeProps","Icon","Badge","name","bem","actionBarIconProps","dot","Boolean","text","String","icon","color","badge","iconClass","badgeProps","Object","iconPrefix","stdin_default","props","setup","slots","route","renderIcon","default"],"sources":["D:/web/my-blog/node_modules/vant/es/action-bar-icon/ActionBarIcon.mjs"],"sourcesContent":["import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\nimport { defineComponent } from \"vue\";\nimport { extend, createNamespace, unknownProp, numericProp } from \"../utils/index.mjs\";\nimport { ACTION_BAR_KEY } from \"../action-bar/ActionBar.mjs\";\nimport { useParent } from \"@vant/use\";\nimport { useRoute, routeProps } from \"../composables/use-route.mjs\";\nimport { Icon } from \"../icon/index.mjs\";\nimport { Badge } from \"../badge/index.mjs\";\nconst [name, bem] = createNamespace(\"action-bar-icon\");\nconst actionBarIconProps = extend({}, routeProps, {\n  dot: Boolean,\n  text: String,\n  icon: String,\n  color: String,\n  badge: numericProp,\n  iconClass: unknownProp,\n  badgeProps: Object,\n  iconPrefix: String\n});\nvar stdin_default = defineComponent({\n  name,\n  props: actionBarIconProps,\n  setup(props, {\n    slots\n  }) {\n    const route = useRoute();\n    useParent(ACTION_BAR_KEY);\n    const renderIcon = () => {\n      const {\n        dot,\n        badge,\n        icon,\n        color,\n        iconClass,\n        badgeProps,\n        iconPrefix\n      } = props;\n      if (slots.icon) {\n        return _createVNode(Badge, _mergeProps({\n          \"dot\": dot,\n          \"class\": bem(\"icon\"),\n          \"content\": badge\n        }, badgeProps), {\n          default: slots.icon\n        });\n      }\n      return _createVNode(Icon, {\n        \"tag\": \"div\",\n        \"dot\": dot,\n        \"name\": icon,\n        \"badge\": badge,\n        \"color\": color,\n        \"class\": [bem(\"icon\"), iconClass],\n        \"badgeProps\": badgeProps,\n        \"classPrefix\": iconPrefix\n      }, null);\n    };\n    return () => _createVNode(\"div\", {\n      \"role\": \"button\",\n      \"class\": bem(),\n      \"tabindex\": 0,\n      \"onClick\": route\n    }, [renderIcon(), slots.default ? slots.default() : props.text]);\n  }\n});\nexport {\n  stdin_default as default\n};\n"],"mappings":"AAAA,SAASA,WAAW,IAAIC,YAAxB,EAAsCC,UAAU,IAAIC,WAApD,QAAuE,KAAvE;AACA,SAASC,eAAT,QAAgC,KAAhC;AACA,SAASC,MAAT,EAAiBC,eAAjB,EAAkCC,WAAlC,EAA+CC,WAA/C,QAAkE,oBAAlE;AACA,SAASC,cAAT,QAA+B,6BAA/B;AACA,SAASC,SAAT,QAA0B,WAA1B;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,8BAArC;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,KAAT,QAAsB,oBAAtB;AACA,MAAM,CAACC,IAAD,EAAOC,GAAP,IAAcV,eAAe,CAAC,iBAAD,CAAnC;AACA,MAAMW,kBAAkB,GAAGZ,MAAM,CAAC,EAAD,EAAKO,UAAL,EAAiB;EAChDM,GAAG,EAAEC,OAD2C;EAEhDC,IAAI,EAAEC,MAF0C;EAGhDC,IAAI,EAAED,MAH0C;EAIhDE,KAAK,EAAEF,MAJyC;EAKhDG,KAAK,EAAEhB,WALyC;EAMhDiB,SAAS,EAAElB,WANqC;EAOhDmB,UAAU,EAAEC,MAPoC;EAQhDC,UAAU,EAAEP;AARoC,CAAjB,CAAjC;AAUA,IAAIQ,aAAa,GAAGzB,eAAe,CAAC;EAClCW,IADkC;EAElCe,KAAK,EAAEb,kBAF2B;;EAGlCc,KAAK,CAACD,KAAD,EAAQ;IACXE;EADW,CAAR,EAEF;IACD,MAAMC,KAAK,GAAGtB,QAAQ,EAAtB;IACAD,SAAS,CAACD,cAAD,CAAT;;IACA,MAAMyB,UAAU,GAAG,MAAM;MACvB,MAAM;QACJhB,GADI;QAEJM,KAFI;QAGJF,IAHI;QAIJC,KAJI;QAKJE,SALI;QAMJC,UANI;QAOJE;MAPI,IAQFE,KARJ;;MASA,IAAIE,KAAK,CAACV,IAAV,EAAgB;QACd,OAAOrB,YAAY,CAACa,KAAD,EAAQX,WAAW,CAAC;UACrC,OAAOe,GAD8B;UAErC,SAASF,GAAG,CAAC,MAAD,CAFyB;UAGrC,WAAWQ;QAH0B,CAAD,EAInCE,UAJmC,CAAnB,EAIH;UACdS,OAAO,EAAEH,KAAK,CAACV;QADD,CAJG,CAAnB;MAOD;;MACD,OAAOrB,YAAY,CAACY,IAAD,EAAO;QACxB,OAAO,KADiB;QAExB,OAAOK,GAFiB;QAGxB,QAAQI,IAHgB;QAIxB,SAASE,KAJe;QAKxB,SAASD,KALe;QAMxB,SAAS,CAACP,GAAG,CAAC,MAAD,CAAJ,EAAcS,SAAd,CANe;QAOxB,cAAcC,UAPU;QAQxB,eAAeE;MARS,CAAP,EAShB,IATgB,CAAnB;IAUD,CA7BD;;IA8BA,OAAO,MAAM3B,YAAY,CAAC,KAAD,EAAQ;MAC/B,QAAQ,QADuB;MAE/B,SAASe,GAAG,EAFmB;MAG/B,YAAY,CAHmB;MAI/B,WAAWiB;IAJoB,CAAR,EAKtB,CAACC,UAAU,EAAX,EAAeF,KAAK,CAACG,OAAN,GAAgBH,KAAK,CAACG,OAAN,EAAhB,GAAkCL,KAAK,CAACV,IAAvD,CALsB,CAAzB;EAMD;;AA5CiC,CAAD,CAAnC;AA8CA,SACES,aAAa,IAAIM,OADnB"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\nimport { defineComponent } from \"vue\";\nimport { pick, createNamespace } from \"../utils/index.mjs\";\nimport { RADIO_KEY } from \"../radio-group/RadioGroup.mjs\";\nimport { useParent } from \"@vant/use\";\nimport Checker, { checkerProps } from \"../checkbox/Checker.mjs\";\nconst [name, bem] = createNamespace(\"radio\");\nvar stdin_default = defineComponent({\n  name,\n  props: checkerProps,\n  emits: [\"update:modelValue\"],\n\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const {\n      parent\n    } = useParent(RADIO_KEY);\n\n    const checked = () => {\n      const value = parent ? parent.props.modelValue : props.modelValue;\n      return value === props.name;\n    };\n\n    const toggle = () => {\n      if (parent) {\n        parent.updateValue(props.name);\n      } else {\n        emit(\"update:modelValue\", props.name);\n      }\n    };\n\n    return () => _createVNode(Checker, _mergeProps({\n      \"bem\": bem,\n      \"role\": \"radio\",\n      \"parent\": parent,\n      \"checked\": checked(),\n      \"onToggle\": toggle\n    }, props), pick(slots, [\"default\", \"icon\"]));\n  }\n\n});\nexport { stdin_default as default };","map":{"version":3,"names":["createVNode","_createVNode","mergeProps","_mergeProps","defineComponent","pick","createNamespace","RADIO_KEY","useParent","Checker","checkerProps","name","bem","stdin_default","props","emits","setup","emit","slots","parent","checked","value","modelValue","toggle","updateValue","default"],"sources":["D:/web/my-blog/node_modules/vant/es/radio/Radio.mjs"],"sourcesContent":["import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\nimport { defineComponent } from \"vue\";\nimport { pick, createNamespace } from \"../utils/index.mjs\";\nimport { RADIO_KEY } from \"../radio-group/RadioGroup.mjs\";\nimport { useParent } from \"@vant/use\";\nimport Checker, { checkerProps } from \"../checkbox/Checker.mjs\";\nconst [name, bem] = createNamespace(\"radio\");\nvar stdin_default = defineComponent({\n  name,\n  props: checkerProps,\n  emits: [\"update:modelValue\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const {\n      parent\n    } = useParent(RADIO_KEY);\n    const checked = () => {\n      const value = parent ? parent.props.modelValue : props.modelValue;\n      return value === props.name;\n    };\n    const toggle = () => {\n      if (parent) {\n        parent.updateValue(props.name);\n      } else {\n        emit(\"update:modelValue\", props.name);\n      }\n    };\n    return () => _createVNode(Checker, _mergeProps({\n      \"bem\": bem,\n      \"role\": \"radio\",\n      \"parent\": parent,\n      \"checked\": checked(),\n      \"onToggle\": toggle\n    }, props), pick(slots, [\"default\", \"icon\"]));\n  }\n});\nexport {\n  stdin_default as default\n};\n"],"mappings":"AAAA,SAASA,WAAW,IAAIC,YAAxB,EAAsCC,UAAU,IAAIC,WAApD,QAAuE,KAAvE;AACA,SAASC,eAAT,QAAgC,KAAhC;AACA,SAASC,IAAT,EAAeC,eAAf,QAAsC,oBAAtC;AACA,SAASC,SAAT,QAA0B,+BAA1B;AACA,SAASC,SAAT,QAA0B,WAA1B;AACA,OAAOC,OAAP,IAAkBC,YAAlB,QAAsC,yBAAtC;AACA,MAAM,CAACC,IAAD,EAAOC,GAAP,IAAcN,eAAe,CAAC,OAAD,CAAnC;AACA,IAAIO,aAAa,GAAGT,eAAe,CAAC;EAClCO,IADkC;EAElCG,KAAK,EAAEJ,YAF2B;EAGlCK,KAAK,EAAE,CAAC,mBAAD,CAH2B;;EAIlCC,KAAK,CAACF,KAAD,EAAQ;IACXG,IADW;IAEXC;EAFW,CAAR,EAGF;IACD,MAAM;MACJC;IADI,IAEFX,SAAS,CAACD,SAAD,CAFb;;IAGA,MAAMa,OAAO,GAAG,MAAM;MACpB,MAAMC,KAAK,GAAGF,MAAM,GAAGA,MAAM,CAACL,KAAP,CAAaQ,UAAhB,GAA6BR,KAAK,CAACQ,UAAvD;MACA,OAAOD,KAAK,KAAKP,KAAK,CAACH,IAAvB;IACD,CAHD;;IAIA,MAAMY,MAAM,GAAG,MAAM;MACnB,IAAIJ,MAAJ,EAAY;QACVA,MAAM,CAACK,WAAP,CAAmBV,KAAK,CAACH,IAAzB;MACD,CAFD,MAEO;QACLM,IAAI,CAAC,mBAAD,EAAsBH,KAAK,CAACH,IAA5B,CAAJ;MACD;IACF,CAND;;IAOA,OAAO,MAAMV,YAAY,CAACQ,OAAD,EAAUN,WAAW,CAAC;MAC7C,OAAOS,GADsC;MAE7C,QAAQ,OAFqC;MAG7C,UAAUO,MAHmC;MAI7C,WAAWC,OAAO,EAJ2B;MAK7C,YAAYG;IALiC,CAAD,EAM3CT,KAN2C,CAArB,EAMdT,IAAI,CAACa,KAAD,EAAQ,CAAC,SAAD,EAAY,MAAZ,CAAR,CANU,CAAzB;EAOD;;AA7BiC,CAAD,CAAnC;AA+BA,SACEL,aAAa,IAAIY,OADnB"},"metadata":{},"sourceType":"module"}
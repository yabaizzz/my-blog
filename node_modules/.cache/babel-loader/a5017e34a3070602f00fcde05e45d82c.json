{"ast":null,"code":"require(\"core-js/modules/es.error.cause.js\");\n\nrequire(\"core-js/modules/es.typed-array.at.js\");\n\nrequire(\"core-js/modules/es.typed-array.set.js\");\n\nrequire(\"core-js/modules/web.dom-exception.stack.js\");\n\n/*!\n * Compressor.js v1.1.1\n * https://fengyuanchen.github.io/compressorjs\n *\n * Copyright 2018-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2021-10-05T02:32:40.212Z\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Compressor = factory());\n})(this, function () {\n  'use strict';\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n\n      if (enumerableOnly) {\n        symbols = symbols.filter(function (sym) {\n          return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        });\n      }\n\n      keys.push.apply(keys, symbols);\n    }\n\n    return keys;\n  }\n\n  function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n\n      if (i % 2) {\n        ownKeys(Object(source), true).forEach(function (key) {\n          _defineProperty(target, key, source[key]);\n        });\n      } else if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n      } else {\n        ownKeys(Object(source)).forEach(function (key) {\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n      }\n    }\n\n    return target;\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function _extends() {\n    _extends = Object.assign || function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n\n      return target;\n    };\n\n    return _extends.apply(this, arguments);\n  }\n\n  var canvasToBlob = {\n    exports: {}\n  };\n  /*\n   * JavaScript Canvas to Blob\n   * https://github.com/blueimp/JavaScript-Canvas-to-Blob\n   *\n   * Copyright 2012, Sebastian Tschan\n   * https://blueimp.net\n   *\n   * Licensed under the MIT license:\n   * https://opensource.org/licenses/MIT\n   *\n   * Based on stackoverflow user Stoive's code snippet:\n   * http://stackoverflow.com/q/4998908\n   */\n\n  (function (module) {\n    if (typeof window === 'undefined') {\n      return;\n    }\n\n    (function (window) {\n      var CanvasPrototype = window.HTMLCanvasElement && window.HTMLCanvasElement.prototype;\n\n      var hasBlobConstructor = window.Blob && function () {\n        try {\n          return Boolean(new Blob());\n        } catch (e) {\n          return false;\n        }\n      }();\n\n      var hasArrayBufferViewSupport = hasBlobConstructor && window.Uint8Array && function () {\n        try {\n          return new Blob([new Uint8Array(100)]).size === 100;\n        } catch (e) {\n          return false;\n        }\n      }();\n\n      var BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\n      var dataURIPattern = /^data:((.*?)(;charset=.*?)?)(;base64)?,/;\n\n      var dataURLtoBlob = (hasBlobConstructor || BlobBuilder) && window.atob && window.ArrayBuffer && window.Uint8Array && function (dataURI) {\n        var matches, mediaType, isBase64, dataString, byteString, arrayBuffer, intArray, i, bb; // Parse the dataURI components as per RFC 2397\n\n        matches = dataURI.match(dataURIPattern);\n\n        if (!matches) {\n          throw new Error('invalid data URI');\n        } // Default to text/plain;charset=US-ASCII\n\n\n        mediaType = matches[2] ? matches[1] : 'text/plain' + (matches[3] || ';charset=US-ASCII');\n        isBase64 = !!matches[4];\n        dataString = dataURI.slice(matches[0].length);\n\n        if (isBase64) {\n          // Convert base64 to raw binary data held in a string:\n          byteString = atob(dataString);\n        } else {\n          // Convert base64/URLEncoded data component to raw binary:\n          byteString = decodeURIComponent(dataString);\n        } // Write the bytes of the string to an ArrayBuffer:\n\n\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n\n        for (i = 0; i < byteString.length; i += 1) {\n          intArray[i] = byteString.charCodeAt(i);\n        } // Write the ArrayBuffer (or ArrayBufferView) to a blob:\n\n\n        if (hasBlobConstructor) {\n          return new Blob([hasArrayBufferViewSupport ? intArray : arrayBuffer], {\n            type: mediaType\n          });\n        }\n\n        bb = new BlobBuilder();\n        bb.append(arrayBuffer);\n        return bb.getBlob(mediaType);\n      };\n\n      if (window.HTMLCanvasElement && !CanvasPrototype.toBlob) {\n        if (CanvasPrototype.mozGetAsFile) {\n          CanvasPrototype.toBlob = function (callback, type, quality) {\n            var self = this;\n            setTimeout(function () {\n              if (quality && CanvasPrototype.toDataURL && dataURLtoBlob) {\n                callback(dataURLtoBlob(self.toDataURL(type, quality)));\n              } else {\n                callback(self.mozGetAsFile('blob', type));\n              }\n            });\n          };\n        } else if (CanvasPrototype.toDataURL && dataURLtoBlob) {\n          if (CanvasPrototype.msToBlob) {\n            CanvasPrototype.toBlob = function (callback, type, quality) {\n              var self = this;\n              setTimeout(function () {\n                if ((type && type !== 'image/png' || quality) && CanvasPrototype.toDataURL && dataURLtoBlob) {\n                  callback(dataURLtoBlob(self.toDataURL(type, quality)));\n                } else {\n                  callback(self.msToBlob(type));\n                }\n              });\n            };\n          } else {\n            CanvasPrototype.toBlob = function (callback, type, quality) {\n              var self = this;\n              setTimeout(function () {\n                callback(dataURLtoBlob(self.toDataURL(type, quality)));\n              });\n            };\n          }\n        }\n      }\n\n      if (module.exports) {\n        module.exports = dataURLtoBlob;\n      } else {\n        window.dataURLtoBlob = dataURLtoBlob;\n      }\n    })(window);\n  })(canvasToBlob);\n\n  var toBlob = canvasToBlob.exports;\n\n  var isBlob = function isBlob(value) {\n    if (typeof Blob === 'undefined') {\n      return false;\n    }\n\n    return value instanceof Blob || Object.prototype.toString.call(value) === '[object Blob]';\n  };\n\n  var DEFAULTS = {\n    /**\n     * Indicates if output the original image instead of the compressed one\n     * when the size of the compressed image is greater than the original one's\n     * @type {boolean}\n     */\n    strict: true,\n\n    /**\n     * Indicates if read the image's Exif Orientation information,\n     * and then rotate or flip the image automatically.\n     * @type {boolean}\n     */\n    checkOrientation: true,\n\n    /**\n     * The max width of the output image.\n     * @type {number}\n     */\n    maxWidth: Infinity,\n\n    /**\n     * The max height of the output image.\n     * @type {number}\n     */\n    maxHeight: Infinity,\n\n    /**\n     * The min width of the output image.\n     * @type {number}\n     */\n    minWidth: 0,\n\n    /**\n     * The min height of the output image.\n     * @type {number}\n     */\n    minHeight: 0,\n\n    /**\n     * The width of the output image.\n     * If not specified, the natural width of the source image will be used.\n     * @type {number}\n     */\n    width: undefined,\n\n    /**\n     * The height of the output image.\n     * If not specified, the natural height of the source image will be used.\n     * @type {number}\n     */\n    height: undefined,\n\n    /**\n     * Sets how the size of the image should be resized to the container\n     * specified by the `width` and `height` options.\n     * @type {string}\n     */\n    resize: 'none',\n\n    /**\n     * The quality of the output image.\n     * It must be a number between `0` and `1`,\n     * and only available for `image/jpeg` and `image/webp` images.\n     * Check out {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toBlob canvas.toBlob}.\n     * @type {number}\n     */\n    quality: 0.8,\n\n    /**\n     * The mime type of the output image.\n     * By default, the original mime type of the source image file will be used.\n     * @type {string}\n     */\n    mimeType: 'auto',\n\n    /**\n     * Files whose file type is included in this list,\n     * and whose file size exceeds the `convertSize` value will be converted to JPEGs.\n     * @type {string｜Array}\n     */\n    convertTypes: ['image/png'],\n\n    /**\n     * PNG files over this size (5 MB by default) will be converted to JPEGs.\n     * To disable this, just set the value to `Infinity`.\n     * @type {number}\n     */\n    convertSize: 5000000,\n\n    /**\n     * The hook function to execute before draw the image into the canvas for compression.\n     * @type {Function}\n     * @param {CanvasRenderingContext2D} context - The 2d rendering context of the canvas.\n     * @param {HTMLCanvasElement} canvas - The canvas for compression.\n     * @example\n     * function (context, canvas) {\n     *   context.fillStyle = '#fff';\n     * }\n     */\n    beforeDraw: null,\n\n    /**\n     * The hook function to execute after drew the image into the canvas for compression.\n     * @type {Function}\n     * @param {CanvasRenderingContext2D} context - The 2d rendering context of the canvas.\n     * @param {HTMLCanvasElement} canvas - The canvas for compression.\n     * @example\n     * function (context, canvas) {\n     *   context.filter = 'grayscale(100%)';\n     * }\n     */\n    drew: null,\n\n    /**\n     * The hook function to execute when success to compress the image.\n     * @type {Function}\n     * @param {File} file - The compressed image File object.\n     * @example\n     * function (file) {\n     *   console.log(file);\n     * }\n     */\n    success: null,\n\n    /**\n     * The hook function to execute when fail to compress the image.\n     * @type {Function}\n     * @param {Error} err - An Error object.\n     * @example\n     * function (err) {\n     *   console.log(err.message);\n     * }\n     */\n    error: null\n  };\n  var IS_BROWSER = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n  var WINDOW = IS_BROWSER ? window : {};\n  /**\n   * Check if the given value is a positive number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a positive number, else `false`.\n   */\n\n  var isPositiveNumber = function isPositiveNumber(value) {\n    return value > 0 && value < Infinity;\n  };\n\n  var slice = Array.prototype.slice;\n  /**\n   * Convert array-like or iterable object to an array.\n   * @param {*} value - The value to convert.\n   * @returns {Array} Returns a new array.\n   */\n\n  function toArray(value) {\n    return Array.from ? Array.from(value) : slice.call(value);\n  }\n\n  var REGEXP_IMAGE_TYPE = /^image\\/.+$/;\n  /**\n   * Check if the given value is a mime type of image.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given is a mime type of image, else `false`.\n   */\n\n  function isImageType(value) {\n    return REGEXP_IMAGE_TYPE.test(value);\n  }\n  /**\n   * Convert image type to extension.\n   * @param {string} value - The image type to convert.\n   * @returns {boolean} Returns the image extension.\n   */\n\n\n  function imageTypeToExtension(value) {\n    var extension = isImageType(value) ? value.substr(6) : '';\n\n    if (extension === 'jpeg') {\n      extension = 'jpg';\n    }\n\n    return \".\".concat(extension);\n  }\n\n  var fromCharCode = String.fromCharCode;\n  /**\n   * Get string from char code in data view.\n   * @param {DataView} dataView - The data view for read.\n   * @param {number} start - The start index.\n   * @param {number} length - The read length.\n   * @returns {string} The read result.\n   */\n\n  function getStringFromCharCode(dataView, start, length) {\n    var str = '';\n    var i;\n    length += start;\n\n    for (i = start; i < length; i += 1) {\n      str += fromCharCode(dataView.getUint8(i));\n    }\n\n    return str;\n  }\n\n  var btoa = WINDOW.btoa;\n  /**\n   * Transform array buffer to Data URL.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n   * @param {string} mimeType - The mime type of the Data URL.\n   * @returns {string} The result Data URL.\n   */\n\n  function arrayBufferToDataURL(arrayBuffer, mimeType) {\n    var chunks = [];\n    var chunkSize = 8192;\n    var uint8 = new Uint8Array(arrayBuffer);\n\n    while (uint8.length > 0) {\n      // XXX: Babel's `toConsumableArray` helper will throw error in IE or Safari 9\n      // eslint-disable-next-line prefer-spread\n      chunks.push(fromCharCode.apply(null, toArray(uint8.subarray(0, chunkSize))));\n      uint8 = uint8.subarray(chunkSize);\n    }\n\n    return \"data:\".concat(mimeType, \";base64,\").concat(btoa(chunks.join('')));\n  }\n  /**\n   * Get orientation value from given array buffer.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n   * @returns {number} The read orientation value.\n   */\n\n\n  function resetAndGetOrientation(arrayBuffer) {\n    var dataView = new DataView(arrayBuffer);\n    var orientation; // Ignores range error when the image does not have correct Exif information\n\n    try {\n      var littleEndian;\n      var app1Start;\n      var ifdStart; // Only handle JPEG image (start by 0xFFD8)\n\n      if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n        var length = dataView.byteLength;\n        var offset = 2;\n\n        while (offset + 1 < length) {\n          if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n            app1Start = offset;\n            break;\n          }\n\n          offset += 1;\n        }\n      }\n\n      if (app1Start) {\n        var exifIDCode = app1Start + 4;\n        var tiffOffset = app1Start + 10;\n\n        if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n          var endianness = dataView.getUint16(tiffOffset);\n          littleEndian = endianness === 0x4949;\n\n          if (littleEndian || endianness === 0x4D4D\n          /* bigEndian */\n          ) {\n            if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n              var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n              if (firstIFDOffset >= 0x00000008) {\n                ifdStart = tiffOffset + firstIFDOffset;\n              }\n            }\n          }\n        }\n      }\n\n      if (ifdStart) {\n        var _length = dataView.getUint16(ifdStart, littleEndian);\n\n        var _offset;\n\n        var i;\n\n        for (i = 0; i < _length; i += 1) {\n          _offset = ifdStart + i * 12 + 2;\n\n          if (dataView.getUint16(_offset, littleEndian) === 0x0112\n          /* Orientation */\n          ) {\n            // 8 is the offset of the current tag's value\n            _offset += 8; // Get the original orientation value\n\n            orientation = dataView.getUint16(_offset, littleEndian); // Override the orientation with its default value\n\n            dataView.setUint16(_offset, 1, littleEndian);\n            break;\n          }\n        }\n      }\n    } catch (e) {\n      orientation = 1;\n    }\n\n    return orientation;\n  }\n  /**\n   * Parse Exif Orientation value.\n   * @param {number} orientation - The orientation to parse.\n   * @returns {Object} The parsed result.\n   */\n\n\n  function parseOrientation(orientation) {\n    var rotate = 0;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    switch (orientation) {\n      // Flip horizontal\n      case 2:\n        scaleX = -1;\n        break;\n      // Rotate left 180°\n\n      case 3:\n        rotate = -180;\n        break;\n      // Flip vertical\n\n      case 4:\n        scaleY = -1;\n        break;\n      // Flip vertical and rotate right 90°\n\n      case 5:\n        rotate = 90;\n        scaleY = -1;\n        break;\n      // Rotate right 90°\n\n      case 6:\n        rotate = 90;\n        break;\n      // Flip horizontal and rotate right 90°\n\n      case 7:\n        rotate = 90;\n        scaleX = -1;\n        break;\n      // Rotate left 90°\n\n      case 8:\n        rotate = -90;\n        break;\n    }\n\n    return {\n      rotate: rotate,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  }\n\n  var REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\n  /**\n   * Normalize decimal number.\n   * Check out {@link https://0.30000000000000004.com/}\n   * @param {number} value - The value to normalize.\n   * @param {number} [times=100000000000] - The times for normalizing.\n   * @returns {number} Returns the normalized number.\n   */\n\n  function normalizeDecimalNumber(value) {\n    var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n    return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n  }\n  /**\n   * Get the max sizes in a rectangle under the given aspect ratio.\n   * @param {Object} data - The original sizes.\n   * @param {string} [type='contain'] - The adjust type.\n   * @returns {Object} The result sizes.\n   */\n\n\n  function getAdjustedSizes(_ref) {\n    var aspectRatio = _ref.aspectRatio,\n        height = _ref.height,\n        width = _ref.width;\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'none';\n    var isValidWidth = isPositiveNumber(width);\n    var isValidHeight = isPositiveNumber(height);\n\n    if (isValidWidth && isValidHeight) {\n      var adjustedWidth = height * aspectRatio;\n\n      if ((type === 'contain' || type === 'none') && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\n        height = width / aspectRatio;\n      } else {\n        width = height * aspectRatio;\n      }\n    } else if (isValidWidth) {\n      height = width / aspectRatio;\n    } else if (isValidHeight) {\n      width = height * aspectRatio;\n    }\n\n    return {\n      width: width,\n      height: height\n    };\n  }\n\n  var ArrayBuffer$1 = WINDOW.ArrayBuffer,\n      FileReader = WINDOW.FileReader;\n  var URL = WINDOW.URL || WINDOW.webkitURL;\n  var REGEXP_EXTENSION = /\\.\\w+$/;\n  var AnotherCompressor = WINDOW.Compressor;\n  /**\n   * Creates a new image compressor.\n   * @class\n   */\n\n  var Compressor = /*#__PURE__*/function () {\n    /**\n     * The constructor of Compressor.\n     * @param {File|Blob} file - The target image file for compressing.\n     * @param {Object} [options] - The options for compressing.\n     */\n    function Compressor(file, options) {\n      _classCallCheck(this, Compressor);\n\n      this.file = file;\n      this.image = new Image();\n      this.options = _objectSpread2(_objectSpread2({}, DEFAULTS), options);\n      this.aborted = false;\n      this.result = null;\n      this.init();\n    }\n\n    _createClass(Compressor, [{\n      key: \"init\",\n      value: function init() {\n        var _this = this;\n\n        var file = this.file,\n            options = this.options;\n\n        if (!isBlob(file)) {\n          this.fail(new Error('The first argument must be a File or Blob object.'));\n          return;\n        }\n\n        var mimeType = file.type;\n\n        if (!isImageType(mimeType)) {\n          this.fail(new Error('The first argument must be an image File or Blob object.'));\n          return;\n        }\n\n        if (!URL || !FileReader) {\n          this.fail(new Error('The current browser does not support image compression.'));\n          return;\n        }\n\n        if (!ArrayBuffer$1) {\n          options.checkOrientation = false;\n        }\n\n        if (URL && !options.checkOrientation) {\n          this.load({\n            url: URL.createObjectURL(file)\n          });\n        } else {\n          var reader = new FileReader();\n          var checkOrientation = options.checkOrientation && mimeType === 'image/jpeg';\n          this.reader = reader;\n\n          reader.onload = function (_ref) {\n            var target = _ref.target;\n            var result = target.result;\n            var data = {};\n\n            if (checkOrientation) {\n              // Reset the orientation value to its default value 1\n              // as some iOS browsers will render image with its orientation\n              var orientation = resetAndGetOrientation(result);\n\n              if (orientation > 1 || !URL) {\n                // Generate a new URL which has the default orientation value\n                data.url = arrayBufferToDataURL(result, mimeType);\n\n                if (orientation > 1) {\n                  _extends(data, parseOrientation(orientation));\n                }\n              } else {\n                data.url = URL.createObjectURL(file);\n              }\n            } else {\n              data.url = result;\n            }\n\n            _this.load(data);\n          };\n\n          reader.onabort = function () {\n            _this.fail(new Error('Aborted to read the image with FileReader.'));\n          };\n\n          reader.onerror = function () {\n            _this.fail(new Error('Failed to read the image with FileReader.'));\n          };\n\n          reader.onloadend = function () {\n            _this.reader = null;\n          };\n\n          if (checkOrientation) {\n            reader.readAsArrayBuffer(file);\n          } else {\n            reader.readAsDataURL(file);\n          }\n        }\n      }\n    }, {\n      key: \"load\",\n      value: function load(data) {\n        var _this2 = this;\n\n        var file = this.file,\n            image = this.image;\n\n        image.onload = function () {\n          _this2.draw(_objectSpread2(_objectSpread2({}, data), {}, {\n            naturalWidth: image.naturalWidth,\n            naturalHeight: image.naturalHeight\n          }));\n        };\n\n        image.onabort = function () {\n          _this2.fail(new Error('Aborted to load the image.'));\n        };\n\n        image.onerror = function () {\n          _this2.fail(new Error('Failed to load the image.'));\n        }; // Match all browsers that use WebKit as the layout engine in iOS devices,\n        // such as Safari for iOS, Chrome for iOS, and in-app browsers.\n\n\n        if (WINDOW.navigator && /(?:iPad|iPhone|iPod).*?AppleWebKit/i.test(WINDOW.navigator.userAgent)) {\n          // Fix the `The operation is insecure` error (#57)\n          image.crossOrigin = 'anonymous';\n        }\n\n        image.alt = file.name;\n        image.src = data.url;\n      }\n    }, {\n      key: \"draw\",\n      value: function draw(_ref2) {\n        var _this3 = this;\n\n        var naturalWidth = _ref2.naturalWidth,\n            naturalHeight = _ref2.naturalHeight,\n            _ref2$rotate = _ref2.rotate,\n            rotate = _ref2$rotate === void 0 ? 0 : _ref2$rotate,\n            _ref2$scaleX = _ref2.scaleX,\n            scaleX = _ref2$scaleX === void 0 ? 1 : _ref2$scaleX,\n            _ref2$scaleY = _ref2.scaleY,\n            scaleY = _ref2$scaleY === void 0 ? 1 : _ref2$scaleY;\n        var file = this.file,\n            image = this.image,\n            options = this.options;\n        var canvas = document.createElement('canvas');\n        var context = canvas.getContext('2d');\n        var is90DegreesRotated = Math.abs(rotate) % 180 === 90;\n        var resizable = (options.resize === 'contain' || options.resize === 'cover') && isPositiveNumber(options.width) && isPositiveNumber(options.height);\n        var maxWidth = Math.max(options.maxWidth, 0) || Infinity;\n        var maxHeight = Math.max(options.maxHeight, 0) || Infinity;\n        var minWidth = Math.max(options.minWidth, 0) || 0;\n        var minHeight = Math.max(options.minHeight, 0) || 0;\n        var aspectRatio = naturalWidth / naturalHeight;\n        var width = options.width,\n            height = options.height;\n\n        if (is90DegreesRotated) {\n          var _ref3 = [maxHeight, maxWidth];\n          maxWidth = _ref3[0];\n          maxHeight = _ref3[1];\n          var _ref4 = [minHeight, minWidth];\n          minWidth = _ref4[0];\n          minHeight = _ref4[1];\n          var _ref5 = [height, width];\n          width = _ref5[0];\n          height = _ref5[1];\n        }\n\n        if (resizable) {\n          aspectRatio = width / height;\n        }\n\n        var _getAdjustedSizes = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: maxWidth,\n          height: maxHeight\n        }, 'contain');\n\n        maxWidth = _getAdjustedSizes.width;\n        maxHeight = _getAdjustedSizes.height;\n\n        var _getAdjustedSizes2 = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: minWidth,\n          height: minHeight\n        }, 'cover');\n\n        minWidth = _getAdjustedSizes2.width;\n        minHeight = _getAdjustedSizes2.height;\n\n        if (resizable) {\n          var _getAdjustedSizes3 = getAdjustedSizes({\n            aspectRatio: aspectRatio,\n            width: width,\n            height: height\n          }, options.resize);\n\n          width = _getAdjustedSizes3.width;\n          height = _getAdjustedSizes3.height;\n        } else {\n          var _getAdjustedSizes4 = getAdjustedSizes({\n            aspectRatio: aspectRatio,\n            width: width,\n            height: height\n          });\n\n          var _getAdjustedSizes4$wi = _getAdjustedSizes4.width;\n          width = _getAdjustedSizes4$wi === void 0 ? naturalWidth : _getAdjustedSizes4$wi;\n          var _getAdjustedSizes4$he = _getAdjustedSizes4.height;\n          height = _getAdjustedSizes4$he === void 0 ? naturalHeight : _getAdjustedSizes4$he;\n        }\n\n        width = Math.floor(normalizeDecimalNumber(Math.min(Math.max(width, minWidth), maxWidth)));\n        height = Math.floor(normalizeDecimalNumber(Math.min(Math.max(height, minHeight), maxHeight)));\n        var destX = -width / 2;\n        var destY = -height / 2;\n        var destWidth = width;\n        var destHeight = height;\n        var params = [];\n\n        if (resizable) {\n          var srcX = 0;\n          var srcY = 0;\n          var srcWidth = naturalWidth;\n          var srcHeight = naturalHeight;\n\n          var _getAdjustedSizes5 = getAdjustedSizes({\n            aspectRatio: aspectRatio,\n            width: naturalWidth,\n            height: naturalHeight\n          }, {\n            contain: 'cover',\n            cover: 'contain'\n          }[options.resize]);\n\n          srcWidth = _getAdjustedSizes5.width;\n          srcHeight = _getAdjustedSizes5.height;\n          srcX = (naturalWidth - srcWidth) / 2;\n          srcY = (naturalHeight - srcHeight) / 2;\n          params.push(srcX, srcY, srcWidth, srcHeight);\n        }\n\n        params.push(destX, destY, destWidth, destHeight);\n\n        if (is90DegreesRotated) {\n          var _ref6 = [height, width];\n          width = _ref6[0];\n          height = _ref6[1];\n        }\n\n        canvas.width = width;\n        canvas.height = height;\n\n        if (!isImageType(options.mimeType)) {\n          options.mimeType = file.type;\n        }\n\n        var fillStyle = 'transparent'; // Converts PNG files over the `convertSize` to JPEGs.\n\n        if (file.size > options.convertSize && options.convertTypes.indexOf(options.mimeType) >= 0) {\n          options.mimeType = 'image/jpeg';\n        }\n\n        if (options.mimeType === 'image/jpeg') {\n          fillStyle = '#fff';\n        } // Override the default fill color (#000, black)\n\n\n        context.fillStyle = fillStyle;\n        context.fillRect(0, 0, width, height);\n\n        if (options.beforeDraw) {\n          options.beforeDraw.call(this, context, canvas);\n        }\n\n        if (this.aborted) {\n          return;\n        }\n\n        context.save();\n        context.translate(width / 2, height / 2);\n        context.rotate(rotate * Math.PI / 180);\n        context.scale(scaleX, scaleY);\n        context.drawImage.apply(context, [image].concat(params));\n        context.restore();\n\n        if (options.drew) {\n          options.drew.call(this, context, canvas);\n        }\n\n        if (this.aborted) {\n          return;\n        }\n\n        var done = function done(result) {\n          if (!_this3.aborted) {\n            _this3.done({\n              naturalWidth: naturalWidth,\n              naturalHeight: naturalHeight,\n              result: result\n            });\n          }\n        };\n\n        if (canvas.toBlob) {\n          canvas.toBlob(done, options.mimeType, options.quality);\n        } else {\n          done(toBlob(canvas.toDataURL(options.mimeType, options.quality)));\n        }\n      }\n    }, {\n      key: \"done\",\n      value: function done(_ref7) {\n        var naturalWidth = _ref7.naturalWidth,\n            naturalHeight = _ref7.naturalHeight,\n            result = _ref7.result;\n        var file = this.file,\n            image = this.image,\n            options = this.options;\n\n        if (URL && !options.checkOrientation) {\n          URL.revokeObjectURL(image.src);\n        }\n\n        if (result) {\n          // Returns original file if the result is greater than it and without size related options\n          if (options.strict && result.size > file.size && options.mimeType === file.type && !(options.width > naturalWidth || options.height > naturalHeight || options.minWidth > naturalWidth || options.minHeight > naturalHeight || options.maxWidth < naturalWidth || options.maxHeight < naturalHeight)) {\n            result = file;\n          } else {\n            var date = new Date();\n            result.lastModified = date.getTime();\n            result.lastModifiedDate = date;\n            result.name = file.name; // Convert the extension to match its type\n\n            if (result.name && result.type !== file.type) {\n              result.name = result.name.replace(REGEXP_EXTENSION, imageTypeToExtension(result.type));\n            }\n          }\n        } else {\n          // Returns original file if the result is null in some cases.\n          result = file;\n        }\n\n        this.result = result;\n\n        if (options.success) {\n          options.success.call(this, result);\n        }\n      }\n    }, {\n      key: \"fail\",\n      value: function fail(err) {\n        var options = this.options;\n\n        if (options.error) {\n          options.error.call(this, err);\n        } else {\n          throw err;\n        }\n      }\n    }, {\n      key: \"abort\",\n      value: function abort() {\n        if (!this.aborted) {\n          this.aborted = true;\n\n          if (this.reader) {\n            this.reader.abort();\n          } else if (!this.image.complete) {\n            this.image.onload = null;\n            this.image.onabort();\n          } else {\n            this.fail(new Error('The compression process has been aborted.'));\n          }\n        }\n      }\n      /**\n       * Get the no conflict compressor class.\n       * @returns {Compressor} The compressor class.\n       */\n\n    }], [{\n      key: \"noConflict\",\n      value: function noConflict() {\n        window.Compressor = AnotherCompressor;\n        return Compressor;\n      }\n      /**\n       * Change the default options.\n       * @param {Object} options - The new default options.\n       */\n\n    }, {\n      key: \"setDefaults\",\n      value: function setDefaults(options) {\n        _extends(DEFAULTS, options);\n      }\n    }]);\n\n    return Compressor;\n  }();\n\n  return Compressor;\n});","map":{"version":3,"names":["global","factory","exports","module","define","amd","globalThis","self","Compressor","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","configurable","writable","_createClass","protoProps","staticProps","prototype","obj","value","_extends","assign","hasOwnProperty","call","canvasToBlob","window","CanvasPrototype","HTMLCanvasElement","hasBlobConstructor","Blob","Boolean","e","hasArrayBufferViewSupport","Uint8Array","size","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","dataURIPattern","dataURLtoBlob","atob","ArrayBuffer","dataURI","matches","mediaType","isBase64","dataString","byteString","arrayBuffer","intArray","bb","match","Error","slice","decodeURIComponent","charCodeAt","type","append","getBlob","toBlob","mozGetAsFile","callback","quality","setTimeout","toDataURL","msToBlob","isBlob","toString","DEFAULTS","strict","checkOrientation","maxWidth","Infinity","maxHeight","minWidth","minHeight","width","undefined","height","resize","mimeType","convertTypes","convertSize","beforeDraw","drew","success","error","IS_BROWSER","document","WINDOW","isPositiveNumber","Array","toArray","from","REGEXP_IMAGE_TYPE","isImageType","test","imageTypeToExtension","extension","substr","concat","fromCharCode","String","getStringFromCharCode","dataView","start","str","getUint8","btoa","arrayBufferToDataURL","chunks","chunkSize","uint8","subarray","join","resetAndGetOrientation","DataView","orientation","littleEndian","app1Start","ifdStart","byteLength","offset","exifIDCode","tiffOffset","endianness","getUint16","firstIFDOffset","getUint32","_length","_offset","setUint16","parseOrientation","rotate","scaleX","scaleY","REGEXP_DECIMALS","normalizeDecimalNumber","times","Math","round","getAdjustedSizes","_ref","aspectRatio","isValidWidth","isValidHeight","adjustedWidth","ArrayBuffer$1","FileReader","URL","webkitURL","REGEXP_EXTENSION","AnotherCompressor","file","options","image","Image","aborted","result","init","_this","fail","load","url","createObjectURL","reader","onload","data","onabort","onerror","onloadend","readAsArrayBuffer","readAsDataURL","_this2","draw","naturalWidth","naturalHeight","navigator","userAgent","crossOrigin","alt","name","src","_ref2","_this3","_ref2$rotate","_ref2$scaleX","_ref2$scaleY","canvas","createElement","context","getContext","is90DegreesRotated","abs","resizable","max","_ref3","_ref4","_ref5","_getAdjustedSizes","_getAdjustedSizes2","_getAdjustedSizes3","_getAdjustedSizes4","_getAdjustedSizes4$wi","_getAdjustedSizes4$he","floor","min","destX","destY","destWidth","destHeight","params","srcX","srcY","srcWidth","srcHeight","_getAdjustedSizes5","contain","cover","_ref6","fillStyle","indexOf","fillRect","save","translate","PI","scale","drawImage","restore","done","_ref7","revokeObjectURL","date","Date","lastModified","getTime","lastModifiedDate","replace","err","abort","complete","noConflict","setDefaults"],"sources":["D:/web/my-blog/node_modules/compressorjs/dist/compressor.js"],"sourcesContent":["/*!\n * Compressor.js v1.1.1\n * https://fengyuanchen.github.io/compressorjs\n *\n * Copyright 2018-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2021-10-05T02:32:40.212Z\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Compressor = factory());\n})(this, (function () { 'use strict';\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n\n      if (enumerableOnly) {\n        symbols = symbols.filter(function (sym) {\n          return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        });\n      }\n\n      keys.push.apply(keys, symbols);\n    }\n\n    return keys;\n  }\n\n  function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n\n      if (i % 2) {\n        ownKeys(Object(source), true).forEach(function (key) {\n          _defineProperty(target, key, source[key]);\n        });\n      } else if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n      } else {\n        ownKeys(Object(source)).forEach(function (key) {\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n      }\n    }\n\n    return target;\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function _extends() {\n    _extends = Object.assign || function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n\n      return target;\n    };\n\n    return _extends.apply(this, arguments);\n  }\n\n  var canvasToBlob = {exports: {}};\n\n  /*\n   * JavaScript Canvas to Blob\n   * https://github.com/blueimp/JavaScript-Canvas-to-Blob\n   *\n   * Copyright 2012, Sebastian Tschan\n   * https://blueimp.net\n   *\n   * Licensed under the MIT license:\n   * https://opensource.org/licenses/MIT\n   *\n   * Based on stackoverflow user Stoive's code snippet:\n   * http://stackoverflow.com/q/4998908\n   */\n\n  (function (module) {\n  if (typeof window === 'undefined') {\n    return;\n  }\n\n    (function (window) {\n\n      var CanvasPrototype = window.HTMLCanvasElement && window.HTMLCanvasElement.prototype;\n\n      var hasBlobConstructor = window.Blob && function () {\n        try {\n          return Boolean(new Blob());\n        } catch (e) {\n          return false;\n        }\n      }();\n\n      var hasArrayBufferViewSupport = hasBlobConstructor && window.Uint8Array && function () {\n        try {\n          return new Blob([new Uint8Array(100)]).size === 100;\n        } catch (e) {\n          return false;\n        }\n      }();\n\n      var BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\n      var dataURIPattern = /^data:((.*?)(;charset=.*?)?)(;base64)?,/;\n\n      var dataURLtoBlob = (hasBlobConstructor || BlobBuilder) && window.atob && window.ArrayBuffer && window.Uint8Array && function (dataURI) {\n        var matches, mediaType, isBase64, dataString, byteString, arrayBuffer, intArray, i, bb; // Parse the dataURI components as per RFC 2397\n\n        matches = dataURI.match(dataURIPattern);\n\n        if (!matches) {\n          throw new Error('invalid data URI');\n        } // Default to text/plain;charset=US-ASCII\n\n\n        mediaType = matches[2] ? matches[1] : 'text/plain' + (matches[3] || ';charset=US-ASCII');\n        isBase64 = !!matches[4];\n        dataString = dataURI.slice(matches[0].length);\n\n        if (isBase64) {\n          // Convert base64 to raw binary data held in a string:\n          byteString = atob(dataString);\n        } else {\n          // Convert base64/URLEncoded data component to raw binary:\n          byteString = decodeURIComponent(dataString);\n        } // Write the bytes of the string to an ArrayBuffer:\n\n\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n\n        for (i = 0; i < byteString.length; i += 1) {\n          intArray[i] = byteString.charCodeAt(i);\n        } // Write the ArrayBuffer (or ArrayBufferView) to a blob:\n\n\n        if (hasBlobConstructor) {\n          return new Blob([hasArrayBufferViewSupport ? intArray : arrayBuffer], {\n            type: mediaType\n          });\n        }\n\n        bb = new BlobBuilder();\n        bb.append(arrayBuffer);\n        return bb.getBlob(mediaType);\n      };\n\n      if (window.HTMLCanvasElement && !CanvasPrototype.toBlob) {\n        if (CanvasPrototype.mozGetAsFile) {\n          CanvasPrototype.toBlob = function (callback, type, quality) {\n            var self = this;\n            setTimeout(function () {\n              if (quality && CanvasPrototype.toDataURL && dataURLtoBlob) {\n                callback(dataURLtoBlob(self.toDataURL(type, quality)));\n              } else {\n                callback(self.mozGetAsFile('blob', type));\n              }\n            });\n          };\n        } else if (CanvasPrototype.toDataURL && dataURLtoBlob) {\n          if (CanvasPrototype.msToBlob) {\n            CanvasPrototype.toBlob = function (callback, type, quality) {\n              var self = this;\n              setTimeout(function () {\n                if ((type && type !== 'image/png' || quality) && CanvasPrototype.toDataURL && dataURLtoBlob) {\n                  callback(dataURLtoBlob(self.toDataURL(type, quality)));\n                } else {\n                  callback(self.msToBlob(type));\n                }\n              });\n            };\n          } else {\n            CanvasPrototype.toBlob = function (callback, type, quality) {\n              var self = this;\n              setTimeout(function () {\n                callback(dataURLtoBlob(self.toDataURL(type, quality)));\n              });\n            };\n          }\n        }\n      }\n\n      if (module.exports) {\n        module.exports = dataURLtoBlob;\n      } else {\n        window.dataURLtoBlob = dataURLtoBlob;\n      }\n    })(window);\n  })(canvasToBlob);\n\n  var toBlob = canvasToBlob.exports;\n\n  var isBlob = function isBlob(value) {\n    if (typeof Blob === 'undefined') {\n      return false;\n    }\n\n    return value instanceof Blob || Object.prototype.toString.call(value) === '[object Blob]';\n  };\n\n  var DEFAULTS = {\n    /**\n     * Indicates if output the original image instead of the compressed one\n     * when the size of the compressed image is greater than the original one's\n     * @type {boolean}\n     */\n    strict: true,\n\n    /**\n     * Indicates if read the image's Exif Orientation information,\n     * and then rotate or flip the image automatically.\n     * @type {boolean}\n     */\n    checkOrientation: true,\n\n    /**\n     * The max width of the output image.\n     * @type {number}\n     */\n    maxWidth: Infinity,\n\n    /**\n     * The max height of the output image.\n     * @type {number}\n     */\n    maxHeight: Infinity,\n\n    /**\n     * The min width of the output image.\n     * @type {number}\n     */\n    minWidth: 0,\n\n    /**\n     * The min height of the output image.\n     * @type {number}\n     */\n    minHeight: 0,\n\n    /**\n     * The width of the output image.\n     * If not specified, the natural width of the source image will be used.\n     * @type {number}\n     */\n    width: undefined,\n\n    /**\n     * The height of the output image.\n     * If not specified, the natural height of the source image will be used.\n     * @type {number}\n     */\n    height: undefined,\n\n    /**\n     * Sets how the size of the image should be resized to the container\n     * specified by the `width` and `height` options.\n     * @type {string}\n     */\n    resize: 'none',\n\n    /**\n     * The quality of the output image.\n     * It must be a number between `0` and `1`,\n     * and only available for `image/jpeg` and `image/webp` images.\n     * Check out {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toBlob canvas.toBlob}.\n     * @type {number}\n     */\n    quality: 0.8,\n\n    /**\n     * The mime type of the output image.\n     * By default, the original mime type of the source image file will be used.\n     * @type {string}\n     */\n    mimeType: 'auto',\n\n    /**\n     * Files whose file type is included in this list,\n     * and whose file size exceeds the `convertSize` value will be converted to JPEGs.\n     * @type {string｜Array}\n     */\n    convertTypes: ['image/png'],\n\n    /**\n     * PNG files over this size (5 MB by default) will be converted to JPEGs.\n     * To disable this, just set the value to `Infinity`.\n     * @type {number}\n     */\n    convertSize: 5000000,\n\n    /**\n     * The hook function to execute before draw the image into the canvas for compression.\n     * @type {Function}\n     * @param {CanvasRenderingContext2D} context - The 2d rendering context of the canvas.\n     * @param {HTMLCanvasElement} canvas - The canvas for compression.\n     * @example\n     * function (context, canvas) {\n     *   context.fillStyle = '#fff';\n     * }\n     */\n    beforeDraw: null,\n\n    /**\n     * The hook function to execute after drew the image into the canvas for compression.\n     * @type {Function}\n     * @param {CanvasRenderingContext2D} context - The 2d rendering context of the canvas.\n     * @param {HTMLCanvasElement} canvas - The canvas for compression.\n     * @example\n     * function (context, canvas) {\n     *   context.filter = 'grayscale(100%)';\n     * }\n     */\n    drew: null,\n\n    /**\n     * The hook function to execute when success to compress the image.\n     * @type {Function}\n     * @param {File} file - The compressed image File object.\n     * @example\n     * function (file) {\n     *   console.log(file);\n     * }\n     */\n    success: null,\n\n    /**\n     * The hook function to execute when fail to compress the image.\n     * @type {Function}\n     * @param {Error} err - An Error object.\n     * @example\n     * function (err) {\n     *   console.log(err.message);\n     * }\n     */\n    error: null\n  };\n\n  var IS_BROWSER = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n  var WINDOW = IS_BROWSER ? window : {};\n\n  /**\n   * Check if the given value is a positive number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a positive number, else `false`.\n   */\n\n  var isPositiveNumber = function isPositiveNumber(value) {\n    return value > 0 && value < Infinity;\n  };\n  var slice = Array.prototype.slice;\n  /**\n   * Convert array-like or iterable object to an array.\n   * @param {*} value - The value to convert.\n   * @returns {Array} Returns a new array.\n   */\n\n  function toArray(value) {\n    return Array.from ? Array.from(value) : slice.call(value);\n  }\n  var REGEXP_IMAGE_TYPE = /^image\\/.+$/;\n  /**\n   * Check if the given value is a mime type of image.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given is a mime type of image, else `false`.\n   */\n\n  function isImageType(value) {\n    return REGEXP_IMAGE_TYPE.test(value);\n  }\n  /**\n   * Convert image type to extension.\n   * @param {string} value - The image type to convert.\n   * @returns {boolean} Returns the image extension.\n   */\n\n  function imageTypeToExtension(value) {\n    var extension = isImageType(value) ? value.substr(6) : '';\n\n    if (extension === 'jpeg') {\n      extension = 'jpg';\n    }\n\n    return \".\".concat(extension);\n  }\n  var fromCharCode = String.fromCharCode;\n  /**\n   * Get string from char code in data view.\n   * @param {DataView} dataView - The data view for read.\n   * @param {number} start - The start index.\n   * @param {number} length - The read length.\n   * @returns {string} The read result.\n   */\n\n  function getStringFromCharCode(dataView, start, length) {\n    var str = '';\n    var i;\n    length += start;\n\n    for (i = start; i < length; i += 1) {\n      str += fromCharCode(dataView.getUint8(i));\n    }\n\n    return str;\n  }\n  var btoa = WINDOW.btoa;\n  /**\n   * Transform array buffer to Data URL.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n   * @param {string} mimeType - The mime type of the Data URL.\n   * @returns {string} The result Data URL.\n   */\n\n  function arrayBufferToDataURL(arrayBuffer, mimeType) {\n    var chunks = [];\n    var chunkSize = 8192;\n    var uint8 = new Uint8Array(arrayBuffer);\n\n    while (uint8.length > 0) {\n      // XXX: Babel's `toConsumableArray` helper will throw error in IE or Safari 9\n      // eslint-disable-next-line prefer-spread\n      chunks.push(fromCharCode.apply(null, toArray(uint8.subarray(0, chunkSize))));\n      uint8 = uint8.subarray(chunkSize);\n    }\n\n    return \"data:\".concat(mimeType, \";base64,\").concat(btoa(chunks.join('')));\n  }\n  /**\n   * Get orientation value from given array buffer.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n   * @returns {number} The read orientation value.\n   */\n\n  function resetAndGetOrientation(arrayBuffer) {\n    var dataView = new DataView(arrayBuffer);\n    var orientation; // Ignores range error when the image does not have correct Exif information\n\n    try {\n      var littleEndian;\n      var app1Start;\n      var ifdStart; // Only handle JPEG image (start by 0xFFD8)\n\n      if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n        var length = dataView.byteLength;\n        var offset = 2;\n\n        while (offset + 1 < length) {\n          if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n            app1Start = offset;\n            break;\n          }\n\n          offset += 1;\n        }\n      }\n\n      if (app1Start) {\n        var exifIDCode = app1Start + 4;\n        var tiffOffset = app1Start + 10;\n\n        if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n          var endianness = dataView.getUint16(tiffOffset);\n          littleEndian = endianness === 0x4949;\n\n          if (littleEndian || endianness === 0x4D4D\n          /* bigEndian */\n          ) {\n            if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n              var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n              if (firstIFDOffset >= 0x00000008) {\n                ifdStart = tiffOffset + firstIFDOffset;\n              }\n            }\n          }\n        }\n      }\n\n      if (ifdStart) {\n        var _length = dataView.getUint16(ifdStart, littleEndian);\n\n        var _offset;\n\n        var i;\n\n        for (i = 0; i < _length; i += 1) {\n          _offset = ifdStart + i * 12 + 2;\n\n          if (dataView.getUint16(_offset, littleEndian) === 0x0112\n          /* Orientation */\n          ) {\n            // 8 is the offset of the current tag's value\n            _offset += 8; // Get the original orientation value\n\n            orientation = dataView.getUint16(_offset, littleEndian); // Override the orientation with its default value\n\n            dataView.setUint16(_offset, 1, littleEndian);\n            break;\n          }\n        }\n      }\n    } catch (e) {\n      orientation = 1;\n    }\n\n    return orientation;\n  }\n  /**\n   * Parse Exif Orientation value.\n   * @param {number} orientation - The orientation to parse.\n   * @returns {Object} The parsed result.\n   */\n\n  function parseOrientation(orientation) {\n    var rotate = 0;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    switch (orientation) {\n      // Flip horizontal\n      case 2:\n        scaleX = -1;\n        break;\n      // Rotate left 180°\n\n      case 3:\n        rotate = -180;\n        break;\n      // Flip vertical\n\n      case 4:\n        scaleY = -1;\n        break;\n      // Flip vertical and rotate right 90°\n\n      case 5:\n        rotate = 90;\n        scaleY = -1;\n        break;\n      // Rotate right 90°\n\n      case 6:\n        rotate = 90;\n        break;\n      // Flip horizontal and rotate right 90°\n\n      case 7:\n        rotate = 90;\n        scaleX = -1;\n        break;\n      // Rotate left 90°\n\n      case 8:\n        rotate = -90;\n        break;\n    }\n\n    return {\n      rotate: rotate,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  }\n  var REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\n  /**\n   * Normalize decimal number.\n   * Check out {@link https://0.30000000000000004.com/}\n   * @param {number} value - The value to normalize.\n   * @param {number} [times=100000000000] - The times for normalizing.\n   * @returns {number} Returns the normalized number.\n   */\n\n  function normalizeDecimalNumber(value) {\n    var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n    return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n  }\n  /**\n   * Get the max sizes in a rectangle under the given aspect ratio.\n   * @param {Object} data - The original sizes.\n   * @param {string} [type='contain'] - The adjust type.\n   * @returns {Object} The result sizes.\n   */\n\n  function getAdjustedSizes(_ref) {\n    var aspectRatio = _ref.aspectRatio,\n        height = _ref.height,\n        width = _ref.width;\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'none';\n    var isValidWidth = isPositiveNumber(width);\n    var isValidHeight = isPositiveNumber(height);\n\n    if (isValidWidth && isValidHeight) {\n      var adjustedWidth = height * aspectRatio;\n\n      if ((type === 'contain' || type === 'none') && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\n        height = width / aspectRatio;\n      } else {\n        width = height * aspectRatio;\n      }\n    } else if (isValidWidth) {\n      height = width / aspectRatio;\n    } else if (isValidHeight) {\n      width = height * aspectRatio;\n    }\n\n    return {\n      width: width,\n      height: height\n    };\n  }\n\n  var ArrayBuffer$1 = WINDOW.ArrayBuffer,\n      FileReader = WINDOW.FileReader;\n  var URL = WINDOW.URL || WINDOW.webkitURL;\n  var REGEXP_EXTENSION = /\\.\\w+$/;\n  var AnotherCompressor = WINDOW.Compressor;\n  /**\n   * Creates a new image compressor.\n   * @class\n   */\n\n  var Compressor = /*#__PURE__*/function () {\n    /**\n     * The constructor of Compressor.\n     * @param {File|Blob} file - The target image file for compressing.\n     * @param {Object} [options] - The options for compressing.\n     */\n    function Compressor(file, options) {\n      _classCallCheck(this, Compressor);\n\n      this.file = file;\n      this.image = new Image();\n      this.options = _objectSpread2(_objectSpread2({}, DEFAULTS), options);\n      this.aborted = false;\n      this.result = null;\n      this.init();\n    }\n\n    _createClass(Compressor, [{\n      key: \"init\",\n      value: function init() {\n        var _this = this;\n\n        var file = this.file,\n            options = this.options;\n\n        if (!isBlob(file)) {\n          this.fail(new Error('The first argument must be a File or Blob object.'));\n          return;\n        }\n\n        var mimeType = file.type;\n\n        if (!isImageType(mimeType)) {\n          this.fail(new Error('The first argument must be an image File or Blob object.'));\n          return;\n        }\n\n        if (!URL || !FileReader) {\n          this.fail(new Error('The current browser does not support image compression.'));\n          return;\n        }\n\n        if (!ArrayBuffer$1) {\n          options.checkOrientation = false;\n        }\n\n        if (URL && !options.checkOrientation) {\n          this.load({\n            url: URL.createObjectURL(file)\n          });\n        } else {\n          var reader = new FileReader();\n          var checkOrientation = options.checkOrientation && mimeType === 'image/jpeg';\n          this.reader = reader;\n\n          reader.onload = function (_ref) {\n            var target = _ref.target;\n            var result = target.result;\n            var data = {};\n\n            if (checkOrientation) {\n              // Reset the orientation value to its default value 1\n              // as some iOS browsers will render image with its orientation\n              var orientation = resetAndGetOrientation(result);\n\n              if (orientation > 1 || !URL) {\n                // Generate a new URL which has the default orientation value\n                data.url = arrayBufferToDataURL(result, mimeType);\n\n                if (orientation > 1) {\n                  _extends(data, parseOrientation(orientation));\n                }\n              } else {\n                data.url = URL.createObjectURL(file);\n              }\n            } else {\n              data.url = result;\n            }\n\n            _this.load(data);\n          };\n\n          reader.onabort = function () {\n            _this.fail(new Error('Aborted to read the image with FileReader.'));\n          };\n\n          reader.onerror = function () {\n            _this.fail(new Error('Failed to read the image with FileReader.'));\n          };\n\n          reader.onloadend = function () {\n            _this.reader = null;\n          };\n\n          if (checkOrientation) {\n            reader.readAsArrayBuffer(file);\n          } else {\n            reader.readAsDataURL(file);\n          }\n        }\n      }\n    }, {\n      key: \"load\",\n      value: function load(data) {\n        var _this2 = this;\n\n        var file = this.file,\n            image = this.image;\n\n        image.onload = function () {\n          _this2.draw(_objectSpread2(_objectSpread2({}, data), {}, {\n            naturalWidth: image.naturalWidth,\n            naturalHeight: image.naturalHeight\n          }));\n        };\n\n        image.onabort = function () {\n          _this2.fail(new Error('Aborted to load the image.'));\n        };\n\n        image.onerror = function () {\n          _this2.fail(new Error('Failed to load the image.'));\n        }; // Match all browsers that use WebKit as the layout engine in iOS devices,\n        // such as Safari for iOS, Chrome for iOS, and in-app browsers.\n\n\n        if (WINDOW.navigator && /(?:iPad|iPhone|iPod).*?AppleWebKit/i.test(WINDOW.navigator.userAgent)) {\n          // Fix the `The operation is insecure` error (#57)\n          image.crossOrigin = 'anonymous';\n        }\n\n        image.alt = file.name;\n        image.src = data.url;\n      }\n    }, {\n      key: \"draw\",\n      value: function draw(_ref2) {\n        var _this3 = this;\n\n        var naturalWidth = _ref2.naturalWidth,\n            naturalHeight = _ref2.naturalHeight,\n            _ref2$rotate = _ref2.rotate,\n            rotate = _ref2$rotate === void 0 ? 0 : _ref2$rotate,\n            _ref2$scaleX = _ref2.scaleX,\n            scaleX = _ref2$scaleX === void 0 ? 1 : _ref2$scaleX,\n            _ref2$scaleY = _ref2.scaleY,\n            scaleY = _ref2$scaleY === void 0 ? 1 : _ref2$scaleY;\n        var file = this.file,\n            image = this.image,\n            options = this.options;\n        var canvas = document.createElement('canvas');\n        var context = canvas.getContext('2d');\n        var is90DegreesRotated = Math.abs(rotate) % 180 === 90;\n        var resizable = (options.resize === 'contain' || options.resize === 'cover') && isPositiveNumber(options.width) && isPositiveNumber(options.height);\n        var maxWidth = Math.max(options.maxWidth, 0) || Infinity;\n        var maxHeight = Math.max(options.maxHeight, 0) || Infinity;\n        var minWidth = Math.max(options.minWidth, 0) || 0;\n        var minHeight = Math.max(options.minHeight, 0) || 0;\n        var aspectRatio = naturalWidth / naturalHeight;\n        var width = options.width,\n            height = options.height;\n\n        if (is90DegreesRotated) {\n          var _ref3 = [maxHeight, maxWidth];\n          maxWidth = _ref3[0];\n          maxHeight = _ref3[1];\n          var _ref4 = [minHeight, minWidth];\n          minWidth = _ref4[0];\n          minHeight = _ref4[1];\n          var _ref5 = [height, width];\n          width = _ref5[0];\n          height = _ref5[1];\n        }\n\n        if (resizable) {\n          aspectRatio = width / height;\n        }\n\n        var _getAdjustedSizes = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: maxWidth,\n          height: maxHeight\n        }, 'contain');\n\n        maxWidth = _getAdjustedSizes.width;\n        maxHeight = _getAdjustedSizes.height;\n\n        var _getAdjustedSizes2 = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: minWidth,\n          height: minHeight\n        }, 'cover');\n\n        minWidth = _getAdjustedSizes2.width;\n        minHeight = _getAdjustedSizes2.height;\n\n        if (resizable) {\n          var _getAdjustedSizes3 = getAdjustedSizes({\n            aspectRatio: aspectRatio,\n            width: width,\n            height: height\n          }, options.resize);\n\n          width = _getAdjustedSizes3.width;\n          height = _getAdjustedSizes3.height;\n        } else {\n          var _getAdjustedSizes4 = getAdjustedSizes({\n            aspectRatio: aspectRatio,\n            width: width,\n            height: height\n          });\n\n          var _getAdjustedSizes4$wi = _getAdjustedSizes4.width;\n          width = _getAdjustedSizes4$wi === void 0 ? naturalWidth : _getAdjustedSizes4$wi;\n          var _getAdjustedSizes4$he = _getAdjustedSizes4.height;\n          height = _getAdjustedSizes4$he === void 0 ? naturalHeight : _getAdjustedSizes4$he;\n        }\n\n        width = Math.floor(normalizeDecimalNumber(Math.min(Math.max(width, minWidth), maxWidth)));\n        height = Math.floor(normalizeDecimalNumber(Math.min(Math.max(height, minHeight), maxHeight)));\n        var destX = -width / 2;\n        var destY = -height / 2;\n        var destWidth = width;\n        var destHeight = height;\n        var params = [];\n\n        if (resizable) {\n          var srcX = 0;\n          var srcY = 0;\n          var srcWidth = naturalWidth;\n          var srcHeight = naturalHeight;\n\n          var _getAdjustedSizes5 = getAdjustedSizes({\n            aspectRatio: aspectRatio,\n            width: naturalWidth,\n            height: naturalHeight\n          }, {\n            contain: 'cover',\n            cover: 'contain'\n          }[options.resize]);\n\n          srcWidth = _getAdjustedSizes5.width;\n          srcHeight = _getAdjustedSizes5.height;\n          srcX = (naturalWidth - srcWidth) / 2;\n          srcY = (naturalHeight - srcHeight) / 2;\n          params.push(srcX, srcY, srcWidth, srcHeight);\n        }\n\n        params.push(destX, destY, destWidth, destHeight);\n\n        if (is90DegreesRotated) {\n          var _ref6 = [height, width];\n          width = _ref6[0];\n          height = _ref6[1];\n        }\n\n        canvas.width = width;\n        canvas.height = height;\n\n        if (!isImageType(options.mimeType)) {\n          options.mimeType = file.type;\n        }\n\n        var fillStyle = 'transparent'; // Converts PNG files over the `convertSize` to JPEGs.\n\n        if (file.size > options.convertSize && options.convertTypes.indexOf(options.mimeType) >= 0) {\n          options.mimeType = 'image/jpeg';\n        }\n\n        if (options.mimeType === 'image/jpeg') {\n          fillStyle = '#fff';\n        } // Override the default fill color (#000, black)\n\n\n        context.fillStyle = fillStyle;\n        context.fillRect(0, 0, width, height);\n\n        if (options.beforeDraw) {\n          options.beforeDraw.call(this, context, canvas);\n        }\n\n        if (this.aborted) {\n          return;\n        }\n\n        context.save();\n        context.translate(width / 2, height / 2);\n        context.rotate(rotate * Math.PI / 180);\n        context.scale(scaleX, scaleY);\n        context.drawImage.apply(context, [image].concat(params));\n        context.restore();\n\n        if (options.drew) {\n          options.drew.call(this, context, canvas);\n        }\n\n        if (this.aborted) {\n          return;\n        }\n\n        var done = function done(result) {\n          if (!_this3.aborted) {\n            _this3.done({\n              naturalWidth: naturalWidth,\n              naturalHeight: naturalHeight,\n              result: result\n            });\n          }\n        };\n\n        if (canvas.toBlob) {\n          canvas.toBlob(done, options.mimeType, options.quality);\n        } else {\n          done(toBlob(canvas.toDataURL(options.mimeType, options.quality)));\n        }\n      }\n    }, {\n      key: \"done\",\n      value: function done(_ref7) {\n        var naturalWidth = _ref7.naturalWidth,\n            naturalHeight = _ref7.naturalHeight,\n            result = _ref7.result;\n        var file = this.file,\n            image = this.image,\n            options = this.options;\n\n        if (URL && !options.checkOrientation) {\n          URL.revokeObjectURL(image.src);\n        }\n\n        if (result) {\n          // Returns original file if the result is greater than it and without size related options\n          if (options.strict && result.size > file.size && options.mimeType === file.type && !(options.width > naturalWidth || options.height > naturalHeight || options.minWidth > naturalWidth || options.minHeight > naturalHeight || options.maxWidth < naturalWidth || options.maxHeight < naturalHeight)) {\n            result = file;\n          } else {\n            var date = new Date();\n            result.lastModified = date.getTime();\n            result.lastModifiedDate = date;\n            result.name = file.name; // Convert the extension to match its type\n\n            if (result.name && result.type !== file.type) {\n              result.name = result.name.replace(REGEXP_EXTENSION, imageTypeToExtension(result.type));\n            }\n          }\n        } else {\n          // Returns original file if the result is null in some cases.\n          result = file;\n        }\n\n        this.result = result;\n\n        if (options.success) {\n          options.success.call(this, result);\n        }\n      }\n    }, {\n      key: \"fail\",\n      value: function fail(err) {\n        var options = this.options;\n\n        if (options.error) {\n          options.error.call(this, err);\n        } else {\n          throw err;\n        }\n      }\n    }, {\n      key: \"abort\",\n      value: function abort() {\n        if (!this.aborted) {\n          this.aborted = true;\n\n          if (this.reader) {\n            this.reader.abort();\n          } else if (!this.image.complete) {\n            this.image.onload = null;\n            this.image.onabort();\n          } else {\n            this.fail(new Error('The compression process has been aborted.'));\n          }\n        }\n      }\n      /**\n       * Get the no conflict compressor class.\n       * @returns {Compressor} The compressor class.\n       */\n\n    }], [{\n      key: \"noConflict\",\n      value: function noConflict() {\n        window.Compressor = AnotherCompressor;\n        return Compressor;\n      }\n      /**\n       * Change the default options.\n       * @param {Object} options - The new default options.\n       */\n\n    }, {\n      key: \"setDefaults\",\n      value: function setDefaults(options) {\n        _extends(DEFAULTS, options);\n      }\n    }]);\n\n    return Compressor;\n  }();\n\n  return Compressor;\n\n}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
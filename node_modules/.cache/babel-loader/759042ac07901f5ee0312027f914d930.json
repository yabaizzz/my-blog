{"ast":null,"code":"import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\nimport { ref, watch, computed, nextTick, onMounted, defineComponent } from \"vue\";\nimport { pick, clamp, extend, padZero, createNamespace, makeNumericProp } from \"../utils/index.mjs\";\nimport { times, sharedProps, pickerInheritKeys, proxyPickerMethods } from \"./utils.mjs\";\nimport { useExpose } from \"../composables/use-expose.mjs\";\nimport { Picker } from \"../picker/index.mjs\";\nconst [name] = createNamespace(\"time-picker\");\nvar stdin_default = defineComponent({\n  name,\n  props: extend({}, sharedProps, {\n    minHour: makeNumericProp(0),\n    maxHour: makeNumericProp(23),\n    minMinute: makeNumericProp(0),\n    maxMinute: makeNumericProp(59),\n    modelValue: String\n  }),\n  emits: [\"confirm\", \"cancel\", \"change\", \"update:modelValue\"],\n\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const formatValue = value => {\n      const {\n        minHour,\n        maxHour,\n        maxMinute,\n        minMinute\n      } = props;\n\n      if (!value) {\n        value = `${padZero(minHour)}:${padZero(minMinute)}`;\n      }\n\n      let [hour, minute] = value.split(\":\");\n      hour = padZero(clamp(+hour, +minHour, +maxHour));\n      minute = padZero(clamp(+minute, +minMinute, +maxMinute));\n      return `${hour}:${minute}`;\n    };\n\n    const picker = ref();\n    const currentDate = ref(formatValue(props.modelValue));\n    const ranges = computed(() => [{\n      type: \"hour\",\n      range: [+props.minHour, +props.maxHour]\n    }, {\n      type: \"minute\",\n      range: [+props.minMinute, +props.maxMinute]\n    }]);\n    const originColumns = computed(() => ranges.value.map(({\n      type,\n      range: rangeArr\n    }) => {\n      let values = times(rangeArr[1] - rangeArr[0] + 1, index => padZero(rangeArr[0] + index));\n\n      if (props.filter) {\n        values = props.filter(type, values);\n      }\n\n      return {\n        type,\n        values\n      };\n    }));\n    const columns = computed(() => originColumns.value.map(column => ({\n      values: column.values.map(value => props.formatter(column.type, value))\n    })));\n\n    const updateColumnValue = () => {\n      const pair = currentDate.value.split(\":\");\n      const values = [props.formatter(\"hour\", pair[0]), props.formatter(\"minute\", pair[1])];\n      nextTick(() => {\n        var _a;\n\n        (_a = picker.value) == null ? void 0 : _a.setValues(values);\n      });\n    };\n\n    const updateInnerValue = () => {\n      const [hourIndex, minuteIndex] = picker.value.getIndexes();\n      const [hourColumn, minuteColumn] = originColumns.value;\n      const hour = hourColumn.values[hourIndex] || hourColumn.values[0];\n      const minute = minuteColumn.values[minuteIndex] || minuteColumn.values[0];\n      currentDate.value = formatValue(`${hour}:${minute}`);\n      updateColumnValue();\n    };\n\n    const onConfirm = () => emit(\"confirm\", currentDate.value);\n\n    const onCancel = () => emit(\"cancel\");\n\n    const onChange = () => {\n      updateInnerValue();\n      nextTick(() => {\n        nextTick(() => emit(\"change\", currentDate.value));\n      });\n    };\n\n    onMounted(() => {\n      updateColumnValue();\n      nextTick(updateInnerValue);\n    });\n    watch(columns, updateColumnValue);\n    watch(() => [props.filter, props.maxHour, props.minMinute, props.maxMinute], updateInnerValue);\n    watch(() => props.minHour, () => {\n      nextTick(updateInnerValue);\n    });\n    watch(currentDate, value => emit(\"update:modelValue\", value));\n    watch(() => props.modelValue, value => {\n      value = formatValue(value);\n\n      if (value !== currentDate.value) {\n        currentDate.value = value;\n        updateColumnValue();\n      }\n    });\n    useExpose({\n      getPicker: () => picker.value && proxyPickerMethods(picker.value, updateInnerValue)\n    });\n    return () => _createVNode(Picker, _mergeProps({\n      \"ref\": picker,\n      \"columns\": columns.value,\n      \"onChange\": onChange,\n      \"onCancel\": onCancel,\n      \"onConfirm\": onConfirm\n    }, pick(props, pickerInheritKeys)), slots);\n  }\n\n});\nexport { stdin_default as default };","map":{"version":3,"names":["createVNode","_createVNode","mergeProps","_mergeProps","ref","watch","computed","nextTick","onMounted","defineComponent","pick","clamp","extend","padZero","createNamespace","makeNumericProp","times","sharedProps","pickerInheritKeys","proxyPickerMethods","useExpose","Picker","name","stdin_default","props","minHour","maxHour","minMinute","maxMinute","modelValue","String","emits","setup","emit","slots","formatValue","value","hour","minute","split","picker","currentDate","ranges","type","range","originColumns","map","rangeArr","values","index","filter","columns","column","formatter","updateColumnValue","pair","_a","setValues","updateInnerValue","hourIndex","minuteIndex","getIndexes","hourColumn","minuteColumn","onConfirm","onCancel","onChange","getPicker","default"],"sources":["D:/项目/my-blog/node_modules/vant/es/datetime-picker/TimePicker.mjs"],"sourcesContent":["import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\nimport { ref, watch, computed, nextTick, onMounted, defineComponent } from \"vue\";\nimport { pick, clamp, extend, padZero, createNamespace, makeNumericProp } from \"../utils/index.mjs\";\nimport { times, sharedProps, pickerInheritKeys, proxyPickerMethods } from \"./utils.mjs\";\nimport { useExpose } from \"../composables/use-expose.mjs\";\nimport { Picker } from \"../picker/index.mjs\";\nconst [name] = createNamespace(\"time-picker\");\nvar stdin_default = defineComponent({\n  name,\n  props: extend({}, sharedProps, {\n    minHour: makeNumericProp(0),\n    maxHour: makeNumericProp(23),\n    minMinute: makeNumericProp(0),\n    maxMinute: makeNumericProp(59),\n    modelValue: String\n  }),\n  emits: [\"confirm\", \"cancel\", \"change\", \"update:modelValue\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const formatValue = (value) => {\n      const {\n        minHour,\n        maxHour,\n        maxMinute,\n        minMinute\n      } = props;\n      if (!value) {\n        value = `${padZero(minHour)}:${padZero(minMinute)}`;\n      }\n      let [hour, minute] = value.split(\":\");\n      hour = padZero(clamp(+hour, +minHour, +maxHour));\n      minute = padZero(clamp(+minute, +minMinute, +maxMinute));\n      return `${hour}:${minute}`;\n    };\n    const picker = ref();\n    const currentDate = ref(formatValue(props.modelValue));\n    const ranges = computed(() => [{\n      type: \"hour\",\n      range: [+props.minHour, +props.maxHour]\n    }, {\n      type: \"minute\",\n      range: [+props.minMinute, +props.maxMinute]\n    }]);\n    const originColumns = computed(() => ranges.value.map(({\n      type,\n      range: rangeArr\n    }) => {\n      let values = times(rangeArr[1] - rangeArr[0] + 1, (index) => padZero(rangeArr[0] + index));\n      if (props.filter) {\n        values = props.filter(type, values);\n      }\n      return {\n        type,\n        values\n      };\n    }));\n    const columns = computed(() => originColumns.value.map((column) => ({\n      values: column.values.map((value) => props.formatter(column.type, value))\n    })));\n    const updateColumnValue = () => {\n      const pair = currentDate.value.split(\":\");\n      const values = [props.formatter(\"hour\", pair[0]), props.formatter(\"minute\", pair[1])];\n      nextTick(() => {\n        var _a;\n        (_a = picker.value) == null ? void 0 : _a.setValues(values);\n      });\n    };\n    const updateInnerValue = () => {\n      const [hourIndex, minuteIndex] = picker.value.getIndexes();\n      const [hourColumn, minuteColumn] = originColumns.value;\n      const hour = hourColumn.values[hourIndex] || hourColumn.values[0];\n      const minute = minuteColumn.values[minuteIndex] || minuteColumn.values[0];\n      currentDate.value = formatValue(`${hour}:${minute}`);\n      updateColumnValue();\n    };\n    const onConfirm = () => emit(\"confirm\", currentDate.value);\n    const onCancel = () => emit(\"cancel\");\n    const onChange = () => {\n      updateInnerValue();\n      nextTick(() => {\n        nextTick(() => emit(\"change\", currentDate.value));\n      });\n    };\n    onMounted(() => {\n      updateColumnValue();\n      nextTick(updateInnerValue);\n    });\n    watch(columns, updateColumnValue);\n    watch(() => [props.filter, props.maxHour, props.minMinute, props.maxMinute], updateInnerValue);\n    watch(() => props.minHour, () => {\n      nextTick(updateInnerValue);\n    });\n    watch(currentDate, (value) => emit(\"update:modelValue\", value));\n    watch(() => props.modelValue, (value) => {\n      value = formatValue(value);\n      if (value !== currentDate.value) {\n        currentDate.value = value;\n        updateColumnValue();\n      }\n    });\n    useExpose({\n      getPicker: () => picker.value && proxyPickerMethods(picker.value, updateInnerValue)\n    });\n    return () => _createVNode(Picker, _mergeProps({\n      \"ref\": picker,\n      \"columns\": columns.value,\n      \"onChange\": onChange,\n      \"onCancel\": onCancel,\n      \"onConfirm\": onConfirm\n    }, pick(props, pickerInheritKeys)), slots);\n  }\n});\nexport {\n  stdin_default as default\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
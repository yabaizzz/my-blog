{"ast":null,"code":"import { unref as _unref, createElementVNode as _createElementVNode, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-c42d41e8\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"root\"\n};\nconst _hoisted_2 = {\n  class: \"map\",\n  style: {\n    \"width\": \"100%\",\n    \"height\": \"300px\"\n  }\n};\nimport maps from '@/components/map/components/chooseAddress.vue';\nimport { ref, onMounted } from \"vue\";\nimport { mainStore } from \"@/pinia\"; // import {Route,Router} from 'vue-router'\n\nexport default {\n  name: 'map',\n\n  setup(__props) {\n    let store = mainStore();\n    let cmap = ref(\"\"); //当前位置信息\n\n    let address = ref({\n      lng: 121.392017,\n      lat: 28.58499\n    }); //当前缩放级别：\n\n    let zoom = ref(\"\"); // 地图实列对象\n\n    let map = ref(\"\"); // 标点实列对象\n\n    let marker = ref(\"\"); //初始化地图\n\n    const initMap = function () {\n      map.value = new AMap.Map(\"container\", {\n        zoom: 14,\n        //地图缩放级别\n        center: [address.value.lng, address.value.lat] //地图默认中心点坐标\n\n      }); //获取定位信息\n\n      getLocation(); // 创建点\n\n      addmarker(); // 自适应展示所有标记点\n\n      map.value.setFitView(marker.value); // 这里的this指向构造函数的实例\n\n      zoom.value = map.value.getZoom();\n    };\n\n    let addmarker = () => {\n      let markerContent = \"<div><img style='width:21px;height:30px' src='https://img1.baidu.com/it/u=1462787434,1779325197&fm=253&fmt=auto&app=138&f=JPEG?w=341&h=499' /></div>\";\n      marker.value = new AMap.Marker({\n        position: new AMap.LngLat(address.value.lng, address.value.lat),\n        content: markerContent //自定义marker内容\n\n      }); // 将创建的点标记添加到已有的地图实例：\n\n      map.value.add(marker.value); // 修改地图的中心点为图标的中间\n\n      map.value.setCenter([address.value.lng, address.value.lat]);\n    };\n\n    let getLocation = () => {\n      AMap.plugin('AMap.Geolocation', function () {\n        var geolocation = new AMap.Geolocation({\n          // 是否使用高精度定位，默认：true\n          enableHighAccuracy: true,\n          // 设置定位超时时间，默认：无穷大\n          timeout: 10000,\n          // 定位按钮的停靠位置的偏移量，默认：Pixel(10, 20)\n          buttonOffset: new AMap.Pixel(10, 20),\n          //  定位成功后调整地图视野范围使定位位置及精度范围视野内可见，默认：false\n          zoomToAccuracy: true,\n          //  定位按钮的排放位置,  RB表示右下\n          buttonPosition: 'RB'\n        });\n        geolocation.getCurrentPosition();\n        AMap.event.addListener(geolocation, 'complete', onComplete);\n        AMap.event.addListener(geolocation, 'error', onError);\n\n        function onComplete(data) {\n          console.log(data.formattedAddress, '成功'); // alert(data.formattedAddress)\n          // data是具体的定位信息\n        }\n\n        function onError(data) {\n          console.log(data, '失败'); // 定位出错\n        }\n      });\n    }; //打开地图选择位置\n\n\n    let choose = () => {\n      cmap.value.shows();\n    }; //选择位置返回的信息\n\n\n    let cityinfo = e => {\n      console.log(e.address, 123123123);\n    };\n\n    onMounted(() => {\n      initMap();\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", {\n        onClick: _cache[0] || (_cache[0] = (...args) => _unref(choose) && _unref(choose)(...args)),\n        id: \"container\",\n        style: {\n          \"width\": \"100%\",\n          \"height\": \"100%\"\n        }\n      })]), _createVNode(maps, {\n        ref_key: \"cmap\",\n        ref: cmap,\n        onCityinfo: _unref(cityinfo),\n        jwd: _unref(address)\n      }, null, 8, [\"onCityinfo\", \"jwd\"])]);\n    };\n  }\n\n};","map":{"version":3,"mappings":"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","names":["maps","ref","onMounted","mainStore","store","cmap","address","lng","lat","zoom","map","marker","initMap","value","AMap","Map","center","getLocation","addmarker","setFitView","getZoom","markerContent","Marker","position","LngLat","content","add","setCenter","plugin","geolocation","Geolocation","enableHighAccuracy","timeout","buttonOffset","Pixel","zoomToAccuracy","buttonPosition","getCurrentPosition","event","addListener","onComplete","onError","data","console","log","formattedAddress","choose","shows","cityinfo","e"],"sources":["D:/项目/my-blog/src/components/map/map.vue"],"sourcesContent":["<!--显示当前位置组件-->\n<template>\n  <div class=\"root\">\n    <div class=\"map\" style=\"width: 100%;height: 300px;\">\n      <div @click=\"choose\" id=\"container\" style=\"width:100%; height:100%\"></div>\n    </div>\n    <maps ref=\"cmap\" @cityinfo=\"cityinfo\" :jwd=\"address\"></maps>\n  </div>\n</template>\n\n<script setup>\nimport maps from '@/components/map/components/chooseAddress.vue'\nimport {ref, onMounted} from \"vue\";\nimport {mainStore} from \"@/pinia\";\n// import {Route,Router} from 'vue-router'\n\nlet store = mainStore()\nlet cmap = ref(\"\")\n//当前位置信息\nlet address = ref({\n  lng: 121.392017,\n  lat: 28.58499\n})\n//当前缩放级别：\nlet zoom = ref(\"\");\n// 地图实列对象\nlet map = ref(\"\");\n// 标点实列对象\nlet marker = ref(\"\");\n//初始化地图\nconst initMap = function () {\n  map.value = new AMap.Map(\"container\", {\n    zoom: 14, //地图缩放级别\n    center: [address.value.lng, address.value.lat], //地图默认中心点坐标\n  });\n\n  //获取定位信息\n  getLocation()\n\n  // 创建点\n  addmarker();\n\n  // 自适应展示所有标记点\n  map.value.setFitView(marker.value);\n  // 这里的this指向构造函数的实例\n  zoom.value = map.value.getZoom();\n};\nlet addmarker = () => {\n\n  let markerContent =\n      \"<div><img style='width:21px;height:30px' src='https://img1.baidu.com/it/u=1462787434,1779325197&fm=253&fmt=auto&app=138&f=JPEG?w=341&h=499' /></div>\";\n  marker.value = new AMap.Marker({\n    position: new AMap.LngLat(address.value.lng, address.value.lat),\n\n    content: markerContent, //自定义marker内容\n  });\n\n  // 将创建的点标记添加到已有的地图实例：\n  map.value.add(marker.value);\n  // 修改地图的中心点为图标的中间\n  map.value.setCenter([address.value.lng, address.value.lat]);\n};\nlet getLocation = () => {\n  AMap.plugin('AMap.Geolocation', function () {\n    var geolocation = new AMap.Geolocation({\n      // 是否使用高精度定位，默认：true\n      enableHighAccuracy: true,\n      // 设置定位超时时间，默认：无穷大\n      timeout: 10000,\n      // 定位按钮的停靠位置的偏移量，默认：Pixel(10, 20)\n      buttonOffset: new AMap.Pixel(10, 20),\n      //  定位成功后调整地图视野范围使定位位置及精度范围视野内可见，默认：false\n      zoomToAccuracy: true,\n      //  定位按钮的排放位置,  RB表示右下\n      buttonPosition: 'RB'\n    })\n\n    geolocation.getCurrentPosition()\n    AMap.event.addListener(geolocation, 'complete', onComplete)\n    AMap.event.addListener(geolocation, 'error', onError)\n\n    function onComplete(data) {\n      console.log(data.formattedAddress, '成功')\n      // alert(data.formattedAddress)\n      // data是具体的定位信息\n    }\n\n    function onError(data) {\n      console.log(data, '失败')\n      // 定位出错\n    }\n  })\n}\n\n//打开地图选择位置\nlet choose = () => {\n  cmap.value.shows()\n}\n//选择位置返回的信息\nlet cityinfo = (e) => {\n  console.log(e.address,123123123)\n}\n\nonMounted(() => {\n\n  initMap()\n})\n</script>\n\n<style scoped lang=\"less\">\n.topbar {\n  background: rgba(0, 0, 0, 0.2);\n  width: calc(100% - 30px);\n  display: flex;\n  align-content: center;\n  justify-content: space-between;\n  position: absolute;\n  z-index: 9999;\n  top: 0;\n  left: 0;\n  padding: 15px;\n  font-size: 16px;\n  //   font-weight: bold;\n  .l {\n    color: white;\n    background: red;\n    padding: 10px 25px;\n    border-radius: 10px;\n  }\n\n  .r {\n    background: #2cdb71;\n    padding: 10px 25px;\n    border-radius: 10px;\n    color: white;\n  }\n}\n</style>"]},"metadata":{},"sourceType":"module"}
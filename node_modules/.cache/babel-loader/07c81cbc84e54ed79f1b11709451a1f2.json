{"ast":null,"code":"// 封装网络请求\nimport axios from 'axios';\nconst service = axios.create({\n  // baseURL: 'https://byn.tyjr.ding.zjhy.gov.cn/', // 接口的基础路径，根据实际情况修改\n  baseURL: 'http://tyjradmin.btzqcjr.cn/',\n  // 接口的基础路径，根据实际情况修改\n  timeout: 6000 // 请求超时时间\n\n}); // 请求拦截器\n\nservice.interceptors.request.use(config => {\n  // 在请求发送之前，可以在这里对请求进行一些处理，比如添加请求头、设置请求数据格式等\n  //如果是上传文件的网络请求\n  config.headers['accesstoken'] = 'zrsRoRADCryubZBbYECNBTczqeZeycKL';\n  return config;\n}, error => {\n  // 请求错误时，可以在这里进行一些处理，比如提示错误信息等\n  console.log(error);\n  return Promise.reject(error);\n}); // 响应拦截器\n\nservice.interceptors.response.use(response => {\n  // 在响应数据返回之前，可以在这里对响应进行一些处理，比如过滤数据、统一处理错误码等\n  return response.data;\n}, error => {\n  // 响应错误时，可以在这里进行一些处理，比如提示错误信息等\n  console.log(error);\n  return Promise.reject(error);\n}); // 封装一个 GET 请求\n\n/**\r\n * @param {string} url\r\n * 传入url接口\r\n * @param {object} params\r\n * 传入接口参数\r\n * */\n\nexport function get(url, params) {\n  return service({\n    url,\n    method: 'get',\n    params\n  });\n} // 封装一个 POST 请求\n\n/**\r\n * @param {string} url\r\n * 传入url接口\r\n * @param {object} data\r\n * 传入接口参数\r\n **/\n\nexport function post(url, data) {\n  return service({\n    url,\n    method: 'post',\n    data\n  });\n}","map":{"version":3,"names":["axios","service","create","baseURL","timeout","interceptors","request","use","config","headers","error","console","log","Promise","reject","response","data","get","url","params","method","post"],"sources":["D:/项目/my-blog/src/util/request.js"],"sourcesContent":["// 封装网络请求\r\nimport axios from 'axios';\r\n\r\nconst service = axios.create({\r\n    // baseURL: 'https://byn.tyjr.ding.zjhy.gov.cn/', // 接口的基础路径，根据实际情况修改\r\n    baseURL: 'http://tyjradmin.btzqcjr.cn/', // 接口的基础路径，根据实际情况修改\r\n    timeout: 6000, // 请求超时时间\r\n});\r\n\r\n// 请求拦截器\r\nservice.interceptors.request.use(\r\n    config => {\r\n        // 在请求发送之前，可以在这里对请求进行一些处理，比如添加请求头、设置请求数据格式等\r\n        //如果是上传文件的网络请求\r\n        config.headers['accesstoken'] = 'zrsRoRADCryubZBbYECNBTczqeZeycKL'\r\n        return config;\r\n    },\r\n    error => {\r\n        // 请求错误时，可以在这里进行一些处理，比如提示错误信息等\r\n        console.log(error);\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// 响应拦截器\r\nservice.interceptors.response.use(\r\n    response => {\r\n        // 在响应数据返回之前，可以在这里对响应进行一些处理，比如过滤数据、统一处理错误码等\r\n        return response.data;\r\n    },\r\n    error => {\r\n        // 响应错误时，可以在这里进行一些处理，比如提示错误信息等\r\n        console.log(error);\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n\r\n// 封装一个 GET 请求\r\n/**\r\n * @param {string} url\r\n * 传入url接口\r\n * @param {object} params\r\n * 传入接口参数\r\n * */\r\nexport function get(url, params) {\r\n    return service({\r\n        url,\r\n        method: 'get',\r\n        params,\r\n    });\r\n}\r\n\r\n// 封装一个 POST 请求\r\n/**\r\n * @param {string} url\r\n * 传入url接口\r\n * @param {object} data\r\n * 传入接口参数\r\n **/\r\nexport function post(url, data) {\r\n    return service({\r\n        url,\r\n        method: 'post',\r\n        data,\r\n    });\r\n}"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAa;EACzB;EACAC,OAAO,EAAE,8BAFgB;EAEgB;EACzCC,OAAO,EAAE,IAHgB,CAGV;;AAHU,CAAb,CAAhB,C,CAMA;;AACAH,OAAO,CAACI,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CACIC,MAAM,IAAI;EACN;EACA;EACAA,MAAM,CAACC,OAAP,CAAe,aAAf,IAAgC,kCAAhC;EACA,OAAOD,MAAP;AACH,CANL,EAOIE,KAAK,IAAI;EACL;EACAC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACA,OAAOG,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACH,CAXL,E,CAcA;;AACAT,OAAO,CAACI,YAAR,CAAqBU,QAArB,CAA8BR,GAA9B,CACIQ,QAAQ,IAAI;EACR;EACA,OAAOA,QAAQ,CAACC,IAAhB;AACH,CAJL,EAKIN,KAAK,IAAI;EACL;EACAC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACA,OAAOG,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACH,CATL,E,CAaA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASO,GAAT,CAAaC,GAAb,EAAkBC,MAAlB,EAA0B;EAC7B,OAAOlB,OAAO,CAAC;IACXiB,GADW;IAEXE,MAAM,EAAE,KAFG;IAGXD;EAHW,CAAD,CAAd;AAKH,C,CAED;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASE,IAAT,CAAcH,GAAd,EAAmBF,IAAnB,EAAyB;EAC5B,OAAOf,OAAO,CAAC;IACXiB,GADW;IAEXE,MAAM,EAAE,MAFG;IAGXJ;EAHW,CAAD,CAAd;AAKH"},"metadata":{},"sourceType":"module"}
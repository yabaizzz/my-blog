{"ast":null,"code":"import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\nimport { extend, inBrowser, withInstall } from \"../utils/index.mjs\";\nimport { mountComponent, usePopupState } from \"../utils/mount-component.mjs\";\nimport VanDialog from \"./Dialog.mjs\";\nlet instance;\n\nfunction initInstance() {\n  const Wrapper = {\n    setup() {\n      const {\n        state,\n        toggle\n      } = usePopupState();\n      return () => _createVNode(VanDialog, _mergeProps(state, {\n        \"onUpdate:show\": toggle\n      }), null);\n    }\n\n  };\n  ({\n    instance\n  } = mountComponent(Wrapper));\n}\n\nfunction Dialog(options) {\n  if (!inBrowser) {\n    return Promise.resolve();\n  }\n\n  return new Promise((resolve, reject) => {\n    if (!instance) {\n      initInstance();\n    }\n\n    instance.open(extend({}, Dialog.currentOptions, options, {\n      callback: action => {\n        (action === \"confirm\" ? resolve : reject)(action);\n      }\n    }));\n  });\n}\n\nDialog.defaultOptions = {\n  title: \"\",\n  width: \"\",\n  theme: null,\n  message: \"\",\n  overlay: true,\n  callback: null,\n  teleport: \"body\",\n  className: \"\",\n  allowHtml: false,\n  lockScroll: true,\n  transition: void 0,\n  beforeClose: null,\n  overlayClass: \"\",\n  overlayStyle: void 0,\n  messageAlign: \"\",\n  cancelButtonText: \"\",\n  cancelButtonColor: null,\n  cancelButtonDisabled: false,\n  confirmButtonText: \"\",\n  confirmButtonColor: null,\n  confirmButtonDisabled: false,\n  showConfirmButton: true,\n  showCancelButton: false,\n  closeOnPopstate: true,\n  closeOnClickOverlay: false\n};\nDialog.currentOptions = extend({}, Dialog.defaultOptions);\nDialog.alert = Dialog;\n\nDialog.confirm = options => Dialog(extend({\n  showCancelButton: true\n}, options));\n\nDialog.close = () => {\n  if (instance) {\n    instance.toggle(false);\n  }\n};\n\nDialog.setDefaultOptions = options => {\n  extend(Dialog.currentOptions, options);\n};\n\nDialog.resetDefaultOptions = () => {\n  Dialog.currentOptions = extend({}, Dialog.defaultOptions);\n};\n\nDialog.Component = withInstall(VanDialog);\n\nDialog.install = app => {\n  app.use(Dialog.Component);\n  app.config.globalProperties.$dialog = Dialog;\n};\n\nexport { Dialog };","map":{"version":3,"names":["createVNode","_createVNode","mergeProps","_mergeProps","extend","inBrowser","withInstall","mountComponent","usePopupState","VanDialog","instance","initInstance","Wrapper","setup","state","toggle","Dialog","options","Promise","resolve","reject","open","currentOptions","callback","action","defaultOptions","title","width","theme","message","overlay","teleport","className","allowHtml","lockScroll","transition","beforeClose","overlayClass","overlayStyle","messageAlign","cancelButtonText","cancelButtonColor","cancelButtonDisabled","confirmButtonText","confirmButtonColor","confirmButtonDisabled","showConfirmButton","showCancelButton","closeOnPopstate","closeOnClickOverlay","alert","confirm","close","setDefaultOptions","resetDefaultOptions","Component","install","app","use","config","globalProperties","$dialog"],"sources":["D:/项目/my-blog/node_modules/vant/es/dialog/function-call.mjs"],"sourcesContent":["import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\nimport { extend, inBrowser, withInstall } from \"../utils/index.mjs\";\nimport { mountComponent, usePopupState } from \"../utils/mount-component.mjs\";\nimport VanDialog from \"./Dialog.mjs\";\nlet instance;\nfunction initInstance() {\n  const Wrapper = {\n    setup() {\n      const {\n        state,\n        toggle\n      } = usePopupState();\n      return () => _createVNode(VanDialog, _mergeProps(state, {\n        \"onUpdate:show\": toggle\n      }), null);\n    }\n  };\n  ({\n    instance\n  } = mountComponent(Wrapper));\n}\nfunction Dialog(options) {\n  if (!inBrowser) {\n    return Promise.resolve();\n  }\n  return new Promise((resolve, reject) => {\n    if (!instance) {\n      initInstance();\n    }\n    instance.open(extend({}, Dialog.currentOptions, options, {\n      callback: (action) => {\n        (action === \"confirm\" ? resolve : reject)(action);\n      }\n    }));\n  });\n}\nDialog.defaultOptions = {\n  title: \"\",\n  width: \"\",\n  theme: null,\n  message: \"\",\n  overlay: true,\n  callback: null,\n  teleport: \"body\",\n  className: \"\",\n  allowHtml: false,\n  lockScroll: true,\n  transition: void 0,\n  beforeClose: null,\n  overlayClass: \"\",\n  overlayStyle: void 0,\n  messageAlign: \"\",\n  cancelButtonText: \"\",\n  cancelButtonColor: null,\n  cancelButtonDisabled: false,\n  confirmButtonText: \"\",\n  confirmButtonColor: null,\n  confirmButtonDisabled: false,\n  showConfirmButton: true,\n  showCancelButton: false,\n  closeOnPopstate: true,\n  closeOnClickOverlay: false\n};\nDialog.currentOptions = extend({}, Dialog.defaultOptions);\nDialog.alert = Dialog;\nDialog.confirm = (options) => Dialog(extend({\n  showCancelButton: true\n}, options));\nDialog.close = () => {\n  if (instance) {\n    instance.toggle(false);\n  }\n};\nDialog.setDefaultOptions = (options) => {\n  extend(Dialog.currentOptions, options);\n};\nDialog.resetDefaultOptions = () => {\n  Dialog.currentOptions = extend({}, Dialog.defaultOptions);\n};\nDialog.Component = withInstall(VanDialog);\nDialog.install = (app) => {\n  app.use(Dialog.Component);\n  app.config.globalProperties.$dialog = Dialog;\n};\nexport {\n  Dialog\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\nimport { watch, computed, defineComponent } from \"vue\";\nimport { createNamespace, extend, pick, truthProp } from \"../utils/index.mjs\";\nimport { CHECKBOX_GROUP_KEY } from \"../checkbox-group/CheckboxGroup.mjs\";\nimport { useParent, useCustomFieldValue } from \"@vant/use\";\nimport { useExpose } from \"../composables/use-expose.mjs\";\nimport Checker, { checkerProps } from \"./Checker.mjs\";\nconst [name, bem] = createNamespace(\"checkbox\");\nconst checkboxProps = extend({}, checkerProps, {\n  bindGroup: truthProp\n});\nvar stdin_default = defineComponent({\n  name,\n  props: checkboxProps,\n  emits: [\"change\", \"update:modelValue\"],\n\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const {\n      parent\n    } = useParent(CHECKBOX_GROUP_KEY);\n\n    const setParentValue = checked2 => {\n      const {\n        name: name2\n      } = props;\n      const {\n        max,\n        modelValue\n      } = parent.props;\n      const value = modelValue.slice();\n\n      if (checked2) {\n        const overlimit = max && value.length >= max;\n\n        if (!overlimit && !value.includes(name2)) {\n          value.push(name2);\n\n          if (props.bindGroup) {\n            parent.updateValue(value);\n          }\n        }\n      } else {\n        const index = value.indexOf(name2);\n\n        if (index !== -1) {\n          value.splice(index, 1);\n\n          if (props.bindGroup) {\n            parent.updateValue(value);\n          }\n        }\n      }\n    };\n\n    const checked = computed(() => {\n      if (parent && props.bindGroup) {\n        return parent.props.modelValue.indexOf(props.name) !== -1;\n      }\n\n      return !!props.modelValue;\n    });\n\n    const toggle = (newValue = !checked.value) => {\n      if (parent && props.bindGroup) {\n        setParentValue(newValue);\n      } else {\n        emit(\"update:modelValue\", newValue);\n      }\n    };\n\n    watch(() => props.modelValue, value => emit(\"change\", value));\n    useExpose({\n      toggle,\n      props,\n      checked\n    });\n    useCustomFieldValue(() => props.modelValue);\n    return () => _createVNode(Checker, _mergeProps({\n      \"bem\": bem,\n      \"role\": \"checkbox\",\n      \"parent\": parent,\n      \"checked\": checked.value,\n      \"onToggle\": toggle\n    }, props), pick(slots, [\"default\", \"icon\"]));\n  }\n\n});\nexport { stdin_default as default };","map":{"version":3,"names":["createVNode","_createVNode","mergeProps","_mergeProps","watch","computed","defineComponent","createNamespace","extend","pick","truthProp","CHECKBOX_GROUP_KEY","useParent","useCustomFieldValue","useExpose","Checker","checkerProps","name","bem","checkboxProps","bindGroup","stdin_default","props","emits","setup","emit","slots","parent","setParentValue","checked2","name2","max","modelValue","value","slice","overlimit","length","includes","push","updateValue","index","indexOf","splice","checked","toggle","newValue","default"],"sources":["D:/项目/my-blog/node_modules/vant/es/checkbox/Checkbox.mjs"],"sourcesContent":["import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\nimport { watch, computed, defineComponent } from \"vue\";\nimport { createNamespace, extend, pick, truthProp } from \"../utils/index.mjs\";\nimport { CHECKBOX_GROUP_KEY } from \"../checkbox-group/CheckboxGroup.mjs\";\nimport { useParent, useCustomFieldValue } from \"@vant/use\";\nimport { useExpose } from \"../composables/use-expose.mjs\";\nimport Checker, { checkerProps } from \"./Checker.mjs\";\nconst [name, bem] = createNamespace(\"checkbox\");\nconst checkboxProps = extend({}, checkerProps, {\n  bindGroup: truthProp\n});\nvar stdin_default = defineComponent({\n  name,\n  props: checkboxProps,\n  emits: [\"change\", \"update:modelValue\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const {\n      parent\n    } = useParent(CHECKBOX_GROUP_KEY);\n    const setParentValue = (checked2) => {\n      const {\n        name: name2\n      } = props;\n      const {\n        max,\n        modelValue\n      } = parent.props;\n      const value = modelValue.slice();\n      if (checked2) {\n        const overlimit = max && value.length >= max;\n        if (!overlimit && !value.includes(name2)) {\n          value.push(name2);\n          if (props.bindGroup) {\n            parent.updateValue(value);\n          }\n        }\n      } else {\n        const index = value.indexOf(name2);\n        if (index !== -1) {\n          value.splice(index, 1);\n          if (props.bindGroup) {\n            parent.updateValue(value);\n          }\n        }\n      }\n    };\n    const checked = computed(() => {\n      if (parent && props.bindGroup) {\n        return parent.props.modelValue.indexOf(props.name) !== -1;\n      }\n      return !!props.modelValue;\n    });\n    const toggle = (newValue = !checked.value) => {\n      if (parent && props.bindGroup) {\n        setParentValue(newValue);\n      } else {\n        emit(\"update:modelValue\", newValue);\n      }\n    };\n    watch(() => props.modelValue, (value) => emit(\"change\", value));\n    useExpose({\n      toggle,\n      props,\n      checked\n    });\n    useCustomFieldValue(() => props.modelValue);\n    return () => _createVNode(Checker, _mergeProps({\n      \"bem\": bem,\n      \"role\": \"checkbox\",\n      \"parent\": parent,\n      \"checked\": checked.value,\n      \"onToggle\": toggle\n    }, props), pick(slots, [\"default\", \"icon\"]));\n  }\n});\nexport {\n  stdin_default as default\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
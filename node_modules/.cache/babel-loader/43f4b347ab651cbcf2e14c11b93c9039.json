{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\nimport { ref, watch, computed, defineComponent } from \"vue\";\nimport { extend, unitToPx, truthProp, makeArrayProp, preventDefault, makeStringProp, makeNumericProp, createNamespace, HAPTICS_FEEDBACK, BORDER_UNSET_TOP_BOTTOM } from \"../utils/index.mjs\";\nimport { useChildren } from \"@vant/use\";\nimport { useExpose } from \"../composables/use-expose.mjs\";\nimport { Loading } from \"../loading/index.mjs\";\nimport Column, { PICKER_KEY } from \"./PickerColumn.mjs\";\nconst [name, bem, t] = createNamespace(\"picker\");\nconst pickerSharedProps = {\n  title: String,\n  loading: Boolean,\n  readonly: Boolean,\n  allowHtml: Boolean,\n  itemHeight: makeNumericProp(44),\n  showToolbar: truthProp,\n  swipeDuration: makeNumericProp(1e3),\n  visibleItemCount: makeNumericProp(6),\n  cancelButtonText: String,\n  confirmButtonText: String\n};\nconst pickerProps = extend({}, pickerSharedProps, {\n  columns: makeArrayProp(),\n  valueKey: String,\n  defaultIndex: makeNumericProp(0),\n  toolbarPosition: makeStringProp(\"top\"),\n  columnsFieldNames: Object\n});\nvar stdin_default = defineComponent({\n  name,\n  props: pickerProps,\n  emits: [\"confirm\", \"cancel\", \"change\"],\n\n  setup(props, {\n    emit,\n    slots\n  }) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (slots.default) {\n        console.warn('[Vant] Picker: \"default\" slot is deprecated, please use \"toolbar\" slot instead.');\n      }\n\n      if (props.valueKey) {\n        console.warn('[Vant] Picker: \"valueKey\" prop is deprecated, please use \"columnsFieldNames\" prop instead.');\n      }\n    }\n\n    const hasOptions = ref(false);\n    const formattedColumns = ref([]);\n    const columnsFieldNames = computed(() => {\n      const {\n        columnsFieldNames: columnsFieldNames2\n      } = props;\n      return {\n        text: (columnsFieldNames2 == null ? void 0 : columnsFieldNames2.text) || props.valueKey || \"text\",\n        values: (columnsFieldNames2 == null ? void 0 : columnsFieldNames2.values) || \"values\",\n        children: (columnsFieldNames2 == null ? void 0 : columnsFieldNames2.children) || \"children\"\n      };\n    });\n    const {\n      children,\n      linkChildren\n    } = useChildren(PICKER_KEY);\n    linkChildren();\n    const itemHeight = computed(() => unitToPx(props.itemHeight));\n    const dataType = computed(() => {\n      const firstColumn = props.columns[0];\n\n      if (typeof firstColumn === \"object\") {\n        if (columnsFieldNames.value.children in firstColumn) {\n          return \"cascade\";\n        }\n\n        if (columnsFieldNames.value.values in firstColumn) {\n          return \"object\";\n        }\n      }\n\n      return \"plain\";\n    });\n\n    const formatCascade = () => {\n      var _a;\n\n      const formatted = [];\n      let cursor = {\n        [columnsFieldNames.value.children]: props.columns\n      };\n\n      while (cursor && cursor[columnsFieldNames.value.children]) {\n        const children2 = cursor[columnsFieldNames.value.children];\n        let defaultIndex = (_a = cursor.defaultIndex) != null ? _a : +props.defaultIndex;\n\n        while (children2[defaultIndex] && children2[defaultIndex].disabled) {\n          if (defaultIndex < children2.length - 1) {\n            defaultIndex++;\n          } else {\n            defaultIndex = 0;\n            break;\n          }\n        }\n\n        formatted.push({\n          [columnsFieldNames.value.values]: cursor[columnsFieldNames.value.children],\n          className: cursor.className,\n          defaultIndex\n        });\n        cursor = children2[defaultIndex];\n      }\n\n      formattedColumns.value = formatted;\n    };\n\n    const format = () => {\n      const {\n        columns\n      } = props;\n\n      if (dataType.value === \"plain\") {\n        formattedColumns.value = [{\n          [columnsFieldNames.value.values]: columns\n        }];\n      } else if (dataType.value === \"cascade\") {\n        formatCascade();\n      } else {\n        formattedColumns.value = columns;\n      }\n\n      hasOptions.value = formattedColumns.value.some(item => item[columnsFieldNames.value.values] && item[columnsFieldNames.value.values].length !== 0) || children.some(item => item.hasOptions);\n    };\n\n    const getIndexes = () => children.map(child => child.state.index);\n\n    const setColumnValues = (index, options) => {\n      const column = children[index];\n\n      if (column) {\n        column.setOptions(options);\n        hasOptions.value = true;\n      }\n    };\n\n    const onCascadeChange = columnIndex => {\n      let cursor = {\n        [columnsFieldNames.value.children]: props.columns\n      };\n      const indexes = getIndexes();\n\n      for (let i = 0; i <= columnIndex; i++) {\n        cursor = cursor[columnsFieldNames.value.children][indexes[i]];\n      }\n\n      while (cursor && cursor[columnsFieldNames.value.children]) {\n        columnIndex++;\n        setColumnValues(columnIndex, cursor[columnsFieldNames.value.children]);\n        cursor = cursor[columnsFieldNames.value.children][cursor.defaultIndex || 0];\n      }\n    };\n\n    const getChild = index => children[index];\n\n    const getColumnValue = index => {\n      const column = getChild(index);\n\n      if (column) {\n        return column.getValue();\n      }\n    };\n\n    const setColumnValue = (index, value) => {\n      const column = getChild(index);\n\n      if (column) {\n        column.setValue(value);\n\n        if (dataType.value === \"cascade\") {\n          onCascadeChange(index);\n        }\n      }\n    };\n\n    const getColumnIndex = index => {\n      const column = getChild(index);\n\n      if (column) {\n        return column.state.index;\n      }\n    };\n\n    const setColumnIndex = (columnIndex, optionIndex) => {\n      const column = getChild(columnIndex);\n\n      if (column) {\n        column.setIndex(optionIndex);\n\n        if (dataType.value === \"cascade\") {\n          onCascadeChange(columnIndex);\n        }\n      }\n    };\n\n    const getColumnValues = index => {\n      const column = getChild(index);\n\n      if (column) {\n        return column.state.options;\n      }\n    };\n\n    const getValues = () => children.map(child => child.getValue());\n\n    const setValues = values => {\n      values.forEach((value, index) => {\n        setColumnValue(index, value);\n      });\n    };\n\n    const setIndexes = indexes => {\n      indexes.forEach((optionIndex, columnIndex) => {\n        setColumnIndex(columnIndex, optionIndex);\n      });\n    };\n\n    const emitAction = event => {\n      if (dataType.value === \"plain\") {\n        emit(event, getColumnValue(0), getColumnIndex(0));\n      } else {\n        emit(event, getValues(), getIndexes());\n      }\n    };\n\n    const onChange = columnIndex => {\n      if (dataType.value === \"cascade\") {\n        onCascadeChange(columnIndex);\n      }\n\n      if (dataType.value === \"plain\") {\n        emit(\"change\", getColumnValue(0), getColumnIndex(0));\n      } else {\n        emit(\"change\", getValues(), columnIndex);\n      }\n    };\n\n    const confirm = () => {\n      children.forEach(child => child.stopMomentum());\n      emitAction(\"confirm\");\n    };\n\n    const cancel = () => emitAction(\"cancel\");\n\n    const renderTitle = () => {\n      if (slots.title) {\n        return slots.title();\n      }\n\n      if (props.title) {\n        return _createVNode(\"div\", {\n          \"class\": [bem(\"title\"), \"van-ellipsis\"]\n        }, [props.title]);\n      }\n    };\n\n    const renderCancel = () => {\n      const text = props.cancelButtonText || t(\"cancel\");\n      return _createVNode(\"button\", {\n        \"type\": \"button\",\n        \"class\": [bem(\"cancel\"), HAPTICS_FEEDBACK],\n        \"onClick\": cancel\n      }, [slots.cancel ? slots.cancel() : text]);\n    };\n\n    const renderConfirm = () => {\n      const text = props.confirmButtonText || t(\"confirm\");\n      return _createVNode(\"button\", {\n        \"type\": \"button\",\n        \"class\": [bem(\"confirm\"), HAPTICS_FEEDBACK],\n        \"onClick\": confirm\n      }, [slots.confirm ? slots.confirm() : text]);\n    };\n\n    const renderToolbar = () => {\n      if (props.showToolbar) {\n        const slot = slots.toolbar || slots.default;\n        return _createVNode(\"div\", {\n          \"class\": bem(\"toolbar\")\n        }, [slot ? slot() : [renderCancel(), renderTitle(), renderConfirm()]]);\n      }\n    };\n\n    const renderColumnItems = () => formattedColumns.value.map((item, columnIndex) => {\n      var _a;\n\n      return _createVNode(Column, {\n        \"textKey\": columnsFieldNames.value.text,\n        \"readonly\": props.readonly,\n        \"allowHtml\": props.allowHtml,\n        \"className\": item.className,\n        \"itemHeight\": itemHeight.value,\n        \"defaultIndex\": (_a = item.defaultIndex) != null ? _a : +props.defaultIndex,\n        \"swipeDuration\": props.swipeDuration,\n        \"initialOptions\": item[columnsFieldNames.value.values],\n        \"visibleItemCount\": props.visibleItemCount,\n        \"onChange\": () => onChange(columnIndex)\n      }, {\n        option: slots.option\n      });\n    });\n\n    const renderMask = wrapHeight => {\n      if (hasOptions.value) {\n        const frameStyle = {\n          height: `${itemHeight.value}px`\n        };\n        const maskStyle = {\n          backgroundSize: `100% ${(wrapHeight - itemHeight.value) / 2}px`\n        };\n        return [_createVNode(\"div\", {\n          \"class\": bem(\"mask\"),\n          \"style\": maskStyle\n        }, null), _createVNode(\"div\", {\n          \"class\": [BORDER_UNSET_TOP_BOTTOM, bem(\"frame\")],\n          \"style\": frameStyle\n        }, null)];\n      }\n    };\n\n    const renderColumns = () => {\n      const wrapHeight = itemHeight.value * +props.visibleItemCount;\n      const columnsStyle = {\n        height: `${wrapHeight}px`\n      };\n      return _createVNode(\"div\", {\n        \"class\": bem(\"columns\"),\n        \"style\": columnsStyle,\n        \"onTouchmove\": preventDefault\n      }, [renderColumnItems(), renderMask(wrapHeight)]);\n    };\n\n    watch(() => props.columns, format, {\n      immediate: true\n    });\n    useExpose({\n      confirm,\n      getValues,\n      setValues,\n      getIndexes,\n      setIndexes,\n      getColumnIndex,\n      setColumnIndex,\n      getColumnValue,\n      setColumnValue,\n      getColumnValues,\n      setColumnValues\n    });\n    return () => {\n      var _a, _b;\n\n      return _createVNode(\"div\", {\n        \"class\": bem()\n      }, [props.toolbarPosition === \"top\" ? renderToolbar() : null, props.loading ? _createVNode(Loading, {\n        \"class\": bem(\"loading\")\n      }, null) : null, (_a = slots[\"columns-top\"]) == null ? void 0 : _a.call(slots), renderColumns(), (_b = slots[\"columns-bottom\"]) == null ? void 0 : _b.call(slots), props.toolbarPosition === \"bottom\" ? renderToolbar() : null]);\n    };\n  }\n\n});\nexport { stdin_default as default, pickerSharedProps };","map":{"version":3,"names":["createVNode","_createVNode","ref","watch","computed","defineComponent","extend","unitToPx","truthProp","makeArrayProp","preventDefault","makeStringProp","makeNumericProp","createNamespace","HAPTICS_FEEDBACK","BORDER_UNSET_TOP_BOTTOM","useChildren","useExpose","Loading","Column","PICKER_KEY","name","bem","t","pickerSharedProps","title","String","loading","Boolean","readonly","allowHtml","itemHeight","showToolbar","swipeDuration","visibleItemCount","cancelButtonText","confirmButtonText","pickerProps","columns","valueKey","defaultIndex","toolbarPosition","columnsFieldNames","Object","stdin_default","props","emits","setup","emit","slots","process","env","NODE_ENV","default","console","warn","hasOptions","formattedColumns","columnsFieldNames2","text","values","children","linkChildren","dataType","firstColumn","value","formatCascade","_a","formatted","cursor","children2","disabled","length","push","className","format","some","item","getIndexes","map","child","state","index","setColumnValues","options","column","setOptions","onCascadeChange","columnIndex","indexes","i","getChild","getColumnValue","getValue","setColumnValue","setValue","getColumnIndex","setColumnIndex","optionIndex","setIndex","getColumnValues","getValues","setValues","forEach","setIndexes","emitAction","event","onChange","confirm","stopMomentum","cancel","renderTitle","renderCancel","renderConfirm","renderToolbar","slot","toolbar","renderColumnItems","option","renderMask","wrapHeight","frameStyle","height","maskStyle","backgroundSize","renderColumns","columnsStyle","immediate","_b","call"],"sources":["D:/项目/my-blog/node_modules/vant/es/picker/Picker.mjs"],"sourcesContent":["import { createVNode as _createVNode } from \"vue\";\nimport { ref, watch, computed, defineComponent } from \"vue\";\nimport { extend, unitToPx, truthProp, makeArrayProp, preventDefault, makeStringProp, makeNumericProp, createNamespace, HAPTICS_FEEDBACK, BORDER_UNSET_TOP_BOTTOM } from \"../utils/index.mjs\";\nimport { useChildren } from \"@vant/use\";\nimport { useExpose } from \"../composables/use-expose.mjs\";\nimport { Loading } from \"../loading/index.mjs\";\nimport Column, { PICKER_KEY } from \"./PickerColumn.mjs\";\nconst [name, bem, t] = createNamespace(\"picker\");\nconst pickerSharedProps = {\n  title: String,\n  loading: Boolean,\n  readonly: Boolean,\n  allowHtml: Boolean,\n  itemHeight: makeNumericProp(44),\n  showToolbar: truthProp,\n  swipeDuration: makeNumericProp(1e3),\n  visibleItemCount: makeNumericProp(6),\n  cancelButtonText: String,\n  confirmButtonText: String\n};\nconst pickerProps = extend({}, pickerSharedProps, {\n  columns: makeArrayProp(),\n  valueKey: String,\n  defaultIndex: makeNumericProp(0),\n  toolbarPosition: makeStringProp(\"top\"),\n  columnsFieldNames: Object\n});\nvar stdin_default = defineComponent({\n  name,\n  props: pickerProps,\n  emits: [\"confirm\", \"cancel\", \"change\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (slots.default) {\n        console.warn('[Vant] Picker: \"default\" slot is deprecated, please use \"toolbar\" slot instead.');\n      }\n      if (props.valueKey) {\n        console.warn('[Vant] Picker: \"valueKey\" prop is deprecated, please use \"columnsFieldNames\" prop instead.');\n      }\n    }\n    const hasOptions = ref(false);\n    const formattedColumns = ref([]);\n    const columnsFieldNames = computed(() => {\n      const {\n        columnsFieldNames: columnsFieldNames2\n      } = props;\n      return {\n        text: (columnsFieldNames2 == null ? void 0 : columnsFieldNames2.text) || props.valueKey || \"text\",\n        values: (columnsFieldNames2 == null ? void 0 : columnsFieldNames2.values) || \"values\",\n        children: (columnsFieldNames2 == null ? void 0 : columnsFieldNames2.children) || \"children\"\n      };\n    });\n    const {\n      children,\n      linkChildren\n    } = useChildren(PICKER_KEY);\n    linkChildren();\n    const itemHeight = computed(() => unitToPx(props.itemHeight));\n    const dataType = computed(() => {\n      const firstColumn = props.columns[0];\n      if (typeof firstColumn === \"object\") {\n        if (columnsFieldNames.value.children in firstColumn) {\n          return \"cascade\";\n        }\n        if (columnsFieldNames.value.values in firstColumn) {\n          return \"object\";\n        }\n      }\n      return \"plain\";\n    });\n    const formatCascade = () => {\n      var _a;\n      const formatted = [];\n      let cursor = {\n        [columnsFieldNames.value.children]: props.columns\n      };\n      while (cursor && cursor[columnsFieldNames.value.children]) {\n        const children2 = cursor[columnsFieldNames.value.children];\n        let defaultIndex = (_a = cursor.defaultIndex) != null ? _a : +props.defaultIndex;\n        while (children2[defaultIndex] && children2[defaultIndex].disabled) {\n          if (defaultIndex < children2.length - 1) {\n            defaultIndex++;\n          } else {\n            defaultIndex = 0;\n            break;\n          }\n        }\n        formatted.push({\n          [columnsFieldNames.value.values]: cursor[columnsFieldNames.value.children],\n          className: cursor.className,\n          defaultIndex\n        });\n        cursor = children2[defaultIndex];\n      }\n      formattedColumns.value = formatted;\n    };\n    const format = () => {\n      const {\n        columns\n      } = props;\n      if (dataType.value === \"plain\") {\n        formattedColumns.value = [{\n          [columnsFieldNames.value.values]: columns\n        }];\n      } else if (dataType.value === \"cascade\") {\n        formatCascade();\n      } else {\n        formattedColumns.value = columns;\n      }\n      hasOptions.value = formattedColumns.value.some((item) => item[columnsFieldNames.value.values] && item[columnsFieldNames.value.values].length !== 0) || children.some((item) => item.hasOptions);\n    };\n    const getIndexes = () => children.map((child) => child.state.index);\n    const setColumnValues = (index, options) => {\n      const column = children[index];\n      if (column) {\n        column.setOptions(options);\n        hasOptions.value = true;\n      }\n    };\n    const onCascadeChange = (columnIndex) => {\n      let cursor = {\n        [columnsFieldNames.value.children]: props.columns\n      };\n      const indexes = getIndexes();\n      for (let i = 0; i <= columnIndex; i++) {\n        cursor = cursor[columnsFieldNames.value.children][indexes[i]];\n      }\n      while (cursor && cursor[columnsFieldNames.value.children]) {\n        columnIndex++;\n        setColumnValues(columnIndex, cursor[columnsFieldNames.value.children]);\n        cursor = cursor[columnsFieldNames.value.children][cursor.defaultIndex || 0];\n      }\n    };\n    const getChild = (index) => children[index];\n    const getColumnValue = (index) => {\n      const column = getChild(index);\n      if (column) {\n        return column.getValue();\n      }\n    };\n    const setColumnValue = (index, value) => {\n      const column = getChild(index);\n      if (column) {\n        column.setValue(value);\n        if (dataType.value === \"cascade\") {\n          onCascadeChange(index);\n        }\n      }\n    };\n    const getColumnIndex = (index) => {\n      const column = getChild(index);\n      if (column) {\n        return column.state.index;\n      }\n    };\n    const setColumnIndex = (columnIndex, optionIndex) => {\n      const column = getChild(columnIndex);\n      if (column) {\n        column.setIndex(optionIndex);\n        if (dataType.value === \"cascade\") {\n          onCascadeChange(columnIndex);\n        }\n      }\n    };\n    const getColumnValues = (index) => {\n      const column = getChild(index);\n      if (column) {\n        return column.state.options;\n      }\n    };\n    const getValues = () => children.map((child) => child.getValue());\n    const setValues = (values) => {\n      values.forEach((value, index) => {\n        setColumnValue(index, value);\n      });\n    };\n    const setIndexes = (indexes) => {\n      indexes.forEach((optionIndex, columnIndex) => {\n        setColumnIndex(columnIndex, optionIndex);\n      });\n    };\n    const emitAction = (event) => {\n      if (dataType.value === \"plain\") {\n        emit(event, getColumnValue(0), getColumnIndex(0));\n      } else {\n        emit(event, getValues(), getIndexes());\n      }\n    };\n    const onChange = (columnIndex) => {\n      if (dataType.value === \"cascade\") {\n        onCascadeChange(columnIndex);\n      }\n      if (dataType.value === \"plain\") {\n        emit(\"change\", getColumnValue(0), getColumnIndex(0));\n      } else {\n        emit(\"change\", getValues(), columnIndex);\n      }\n    };\n    const confirm = () => {\n      children.forEach((child) => child.stopMomentum());\n      emitAction(\"confirm\");\n    };\n    const cancel = () => emitAction(\"cancel\");\n    const renderTitle = () => {\n      if (slots.title) {\n        return slots.title();\n      }\n      if (props.title) {\n        return _createVNode(\"div\", {\n          \"class\": [bem(\"title\"), \"van-ellipsis\"]\n        }, [props.title]);\n      }\n    };\n    const renderCancel = () => {\n      const text = props.cancelButtonText || t(\"cancel\");\n      return _createVNode(\"button\", {\n        \"type\": \"button\",\n        \"class\": [bem(\"cancel\"), HAPTICS_FEEDBACK],\n        \"onClick\": cancel\n      }, [slots.cancel ? slots.cancel() : text]);\n    };\n    const renderConfirm = () => {\n      const text = props.confirmButtonText || t(\"confirm\");\n      return _createVNode(\"button\", {\n        \"type\": \"button\",\n        \"class\": [bem(\"confirm\"), HAPTICS_FEEDBACK],\n        \"onClick\": confirm\n      }, [slots.confirm ? slots.confirm() : text]);\n    };\n    const renderToolbar = () => {\n      if (props.showToolbar) {\n        const slot = slots.toolbar || slots.default;\n        return _createVNode(\"div\", {\n          \"class\": bem(\"toolbar\")\n        }, [slot ? slot() : [renderCancel(), renderTitle(), renderConfirm()]]);\n      }\n    };\n    const renderColumnItems = () => formattedColumns.value.map((item, columnIndex) => {\n      var _a;\n      return _createVNode(Column, {\n        \"textKey\": columnsFieldNames.value.text,\n        \"readonly\": props.readonly,\n        \"allowHtml\": props.allowHtml,\n        \"className\": item.className,\n        \"itemHeight\": itemHeight.value,\n        \"defaultIndex\": (_a = item.defaultIndex) != null ? _a : +props.defaultIndex,\n        \"swipeDuration\": props.swipeDuration,\n        \"initialOptions\": item[columnsFieldNames.value.values],\n        \"visibleItemCount\": props.visibleItemCount,\n        \"onChange\": () => onChange(columnIndex)\n      }, {\n        option: slots.option\n      });\n    });\n    const renderMask = (wrapHeight) => {\n      if (hasOptions.value) {\n        const frameStyle = {\n          height: `${itemHeight.value}px`\n        };\n        const maskStyle = {\n          backgroundSize: `100% ${(wrapHeight - itemHeight.value) / 2}px`\n        };\n        return [_createVNode(\"div\", {\n          \"class\": bem(\"mask\"),\n          \"style\": maskStyle\n        }, null), _createVNode(\"div\", {\n          \"class\": [BORDER_UNSET_TOP_BOTTOM, bem(\"frame\")],\n          \"style\": frameStyle\n        }, null)];\n      }\n    };\n    const renderColumns = () => {\n      const wrapHeight = itemHeight.value * +props.visibleItemCount;\n      const columnsStyle = {\n        height: `${wrapHeight}px`\n      };\n      return _createVNode(\"div\", {\n        \"class\": bem(\"columns\"),\n        \"style\": columnsStyle,\n        \"onTouchmove\": preventDefault\n      }, [renderColumnItems(), renderMask(wrapHeight)]);\n    };\n    watch(() => props.columns, format, {\n      immediate: true\n    });\n    useExpose({\n      confirm,\n      getValues,\n      setValues,\n      getIndexes,\n      setIndexes,\n      getColumnIndex,\n      setColumnIndex,\n      getColumnValue,\n      setColumnValue,\n      getColumnValues,\n      setColumnValues\n    });\n    return () => {\n      var _a, _b;\n      return _createVNode(\"div\", {\n        \"class\": bem()\n      }, [props.toolbarPosition === \"top\" ? renderToolbar() : null, props.loading ? _createVNode(Loading, {\n        \"class\": bem(\"loading\")\n      }, null) : null, (_a = slots[\"columns-top\"]) == null ? void 0 : _a.call(slots), renderColumns(), (_b = slots[\"columns-bottom\"]) == null ? void 0 : _b.call(slots), props.toolbarPosition === \"bottom\" ? renderToolbar() : null]);\n    };\n  }\n});\nexport {\n  stdin_default as default,\n  pickerSharedProps\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
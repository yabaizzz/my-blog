{"ast":null,"code":"import { mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\";\nimport { watch, onMounted, onUnmounted, defineComponent } from \"vue\";\nimport { pick, isDef, unknownProp, numericProp, makeStringProp, makeNumberProp, createNamespace } from \"../utils/index.mjs\";\nimport { lockClick } from \"./lock-click.mjs\";\nimport { Icon } from \"../icon/index.mjs\";\nimport { Popup } from \"../popup/index.mjs\";\nimport { Loading } from \"../loading/index.mjs\";\nconst [name, bem] = createNamespace(\"toast\");\nconst popupInheritProps = [\"show\", \"overlay\", \"teleport\", \"transition\", \"overlayClass\", \"overlayStyle\", \"closeOnClickOverlay\"];\nconst toastProps = {\n  icon: String,\n  show: Boolean,\n  type: makeStringProp(\"text\"),\n  overlay: Boolean,\n  message: numericProp,\n  iconSize: numericProp,\n  duration: makeNumberProp(2e3),\n  position: makeStringProp(\"middle\"),\n  teleport: [String, Object],\n  className: unknownProp,\n  iconPrefix: String,\n  transition: makeStringProp(\"van-fade\"),\n  loadingType: String,\n  forbidClick: Boolean,\n  overlayClass: unknownProp,\n  overlayStyle: Object,\n  closeOnClick: Boolean,\n  closeOnClickOverlay: Boolean\n};\nvar stdin_default = defineComponent({\n  name,\n  props: toastProps,\n  emits: [\"update:show\"],\n\n  setup(props, {\n    emit\n  }) {\n    let timer;\n    let clickable = false;\n\n    const toggleClickable = () => {\n      const newValue = props.show && props.forbidClick;\n\n      if (clickable !== newValue) {\n        clickable = newValue;\n        lockClick(clickable);\n      }\n    };\n\n    const updateShow = show => emit(\"update:show\", show);\n\n    const onClick = () => {\n      if (props.closeOnClick) {\n        updateShow(false);\n      }\n    };\n\n    const clearTimer = () => clearTimeout(timer);\n\n    const renderIcon = () => {\n      const {\n        icon,\n        type,\n        iconSize,\n        iconPrefix,\n        loadingType\n      } = props;\n      const hasIcon = icon || type === \"success\" || type === \"fail\";\n\n      if (hasIcon) {\n        return _createVNode(Icon, {\n          \"name\": icon || type,\n          \"size\": iconSize,\n          \"class\": bem(\"icon\"),\n          \"classPrefix\": iconPrefix\n        }, null);\n      }\n\n      if (type === \"loading\") {\n        return _createVNode(Loading, {\n          \"class\": bem(\"loading\"),\n          \"size\": iconSize,\n          \"type\": loadingType\n        }, null);\n      }\n    };\n\n    const renderMessage = () => {\n      const {\n        type,\n        message\n      } = props;\n\n      if (isDef(message) && message !== \"\") {\n        return type === \"html\" ? _createVNode(\"div\", {\n          \"key\": 0,\n          \"class\": bem(\"text\"),\n          \"innerHTML\": String(message)\n        }, null) : _createVNode(\"div\", {\n          \"class\": bem(\"text\")\n        }, [message]);\n      }\n    };\n\n    watch(() => [props.show, props.forbidClick], toggleClickable);\n    watch(() => [props.show, props.type, props.message, props.duration], () => {\n      clearTimer();\n\n      if (props.show && props.duration > 0) {\n        timer = setTimeout(() => {\n          updateShow(false);\n        }, props.duration);\n      }\n    });\n    onMounted(toggleClickable);\n    onUnmounted(toggleClickable);\n    return () => _createVNode(Popup, _mergeProps({\n      \"class\": [bem([props.position, {\n        [props.type]: !props.icon\n      }]), props.className],\n      \"lockScroll\": false,\n      \"onClick\": onClick,\n      \"onClosed\": clearTimer,\n      \"onUpdate:show\": updateShow\n    }, pick(props, popupInheritProps)), {\n      default: () => [renderIcon(), renderMessage()]\n    });\n  }\n\n});\nexport { stdin_default as default };","map":{"version":3,"names":["mergeProps","_mergeProps","createVNode","_createVNode","watch","onMounted","onUnmounted","defineComponent","pick","isDef","unknownProp","numericProp","makeStringProp","makeNumberProp","createNamespace","lockClick","Icon","Popup","Loading","name","bem","popupInheritProps","toastProps","icon","String","show","Boolean","type","overlay","message","iconSize","duration","position","teleport","Object","className","iconPrefix","transition","loadingType","forbidClick","overlayClass","overlayStyle","closeOnClick","closeOnClickOverlay","stdin_default","props","emits","setup","emit","timer","clickable","toggleClickable","newValue","updateShow","onClick","clearTimer","clearTimeout","renderIcon","hasIcon","renderMessage","setTimeout","default"],"sources":["D:/项目/my-blog/node_modules/vant/es/toast/Toast.mjs"],"sourcesContent":["import { mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\";\nimport { watch, onMounted, onUnmounted, defineComponent } from \"vue\";\nimport { pick, isDef, unknownProp, numericProp, makeStringProp, makeNumberProp, createNamespace } from \"../utils/index.mjs\";\nimport { lockClick } from \"./lock-click.mjs\";\nimport { Icon } from \"../icon/index.mjs\";\nimport { Popup } from \"../popup/index.mjs\";\nimport { Loading } from \"../loading/index.mjs\";\nconst [name, bem] = createNamespace(\"toast\");\nconst popupInheritProps = [\"show\", \"overlay\", \"teleport\", \"transition\", \"overlayClass\", \"overlayStyle\", \"closeOnClickOverlay\"];\nconst toastProps = {\n  icon: String,\n  show: Boolean,\n  type: makeStringProp(\"text\"),\n  overlay: Boolean,\n  message: numericProp,\n  iconSize: numericProp,\n  duration: makeNumberProp(2e3),\n  position: makeStringProp(\"middle\"),\n  teleport: [String, Object],\n  className: unknownProp,\n  iconPrefix: String,\n  transition: makeStringProp(\"van-fade\"),\n  loadingType: String,\n  forbidClick: Boolean,\n  overlayClass: unknownProp,\n  overlayStyle: Object,\n  closeOnClick: Boolean,\n  closeOnClickOverlay: Boolean\n};\nvar stdin_default = defineComponent({\n  name,\n  props: toastProps,\n  emits: [\"update:show\"],\n  setup(props, {\n    emit\n  }) {\n    let timer;\n    let clickable = false;\n    const toggleClickable = () => {\n      const newValue = props.show && props.forbidClick;\n      if (clickable !== newValue) {\n        clickable = newValue;\n        lockClick(clickable);\n      }\n    };\n    const updateShow = (show) => emit(\"update:show\", show);\n    const onClick = () => {\n      if (props.closeOnClick) {\n        updateShow(false);\n      }\n    };\n    const clearTimer = () => clearTimeout(timer);\n    const renderIcon = () => {\n      const {\n        icon,\n        type,\n        iconSize,\n        iconPrefix,\n        loadingType\n      } = props;\n      const hasIcon = icon || type === \"success\" || type === \"fail\";\n      if (hasIcon) {\n        return _createVNode(Icon, {\n          \"name\": icon || type,\n          \"size\": iconSize,\n          \"class\": bem(\"icon\"),\n          \"classPrefix\": iconPrefix\n        }, null);\n      }\n      if (type === \"loading\") {\n        return _createVNode(Loading, {\n          \"class\": bem(\"loading\"),\n          \"size\": iconSize,\n          \"type\": loadingType\n        }, null);\n      }\n    };\n    const renderMessage = () => {\n      const {\n        type,\n        message\n      } = props;\n      if (isDef(message) && message !== \"\") {\n        return type === \"html\" ? _createVNode(\"div\", {\n          \"key\": 0,\n          \"class\": bem(\"text\"),\n          \"innerHTML\": String(message)\n        }, null) : _createVNode(\"div\", {\n          \"class\": bem(\"text\")\n        }, [message]);\n      }\n    };\n    watch(() => [props.show, props.forbidClick], toggleClickable);\n    watch(() => [props.show, props.type, props.message, props.duration], () => {\n      clearTimer();\n      if (props.show && props.duration > 0) {\n        timer = setTimeout(() => {\n          updateShow(false);\n        }, props.duration);\n      }\n    });\n    onMounted(toggleClickable);\n    onUnmounted(toggleClickable);\n    return () => _createVNode(Popup, _mergeProps({\n      \"class\": [bem([props.position, {\n        [props.type]: !props.icon\n      }]), props.className],\n      \"lockScroll\": false,\n      \"onClick\": onClick,\n      \"onClosed\": clearTimer,\n      \"onUpdate:show\": updateShow\n    }, pick(props, popupInheritProps)), {\n      default: () => [renderIcon(), renderMessage()]\n    });\n  }\n});\nexport {\n  stdin_default as default\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
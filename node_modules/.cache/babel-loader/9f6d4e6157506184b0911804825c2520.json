{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\nimport { watch, computed, defineComponent } from \"vue\";\nimport { raf, cancelRaf } from \"@vant/use\";\nimport { isObject, truthProp, numericProp, getSizeStyle, makeStringProp, makeNumberProp, makeNumericProp, createNamespace } from \"../utils/index.mjs\";\nconst [name, bem] = createNamespace(\"circle\");\nlet uid = 0;\n\nconst format = rate => Math.min(Math.max(+rate, 0), 100);\n\nfunction getPath(clockwise, viewBoxSize) {\n  const sweepFlag = clockwise ? 1 : 0;\n  return `M ${viewBoxSize / 2} ${viewBoxSize / 2} m 0, -500 a 500, 500 0 1, ${sweepFlag} 0, 1000 a 500, 500 0 1, ${sweepFlag} 0, -1000`;\n}\n\nconst circleProps = {\n  text: String,\n  size: numericProp,\n  fill: makeStringProp(\"none\"),\n  rate: makeNumericProp(100),\n  speed: makeNumericProp(0),\n  color: [String, Object],\n  clockwise: truthProp,\n  layerColor: String,\n  currentRate: makeNumberProp(0),\n  strokeWidth: makeNumericProp(40),\n  strokeLinecap: String,\n  startPosition: makeStringProp(\"top\")\n};\nvar stdin_default = defineComponent({\n  name,\n  props: circleProps,\n  emits: [\"update:currentRate\"],\n\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const id = `van-circle-${uid++}`;\n    const viewBoxSize = computed(() => +props.strokeWidth + 1e3);\n    const path = computed(() => getPath(props.clockwise, viewBoxSize.value));\n    const svgStyle = computed(() => {\n      const ROTATE_ANGLE_MAP = {\n        top: 0,\n        right: 90,\n        bottom: 180,\n        left: 270\n      };\n      const angleValue = ROTATE_ANGLE_MAP[props.startPosition];\n\n      if (angleValue) {\n        return {\n          transform: `rotate(${angleValue}deg)`\n        };\n      }\n    });\n    watch(() => props.rate, rate => {\n      let rafId;\n      const startTime = Date.now();\n      const startRate = props.currentRate;\n      const endRate = format(rate);\n      const duration = Math.abs((startRate - endRate) * 1e3 / +props.speed);\n\n      const animate = () => {\n        const now = Date.now();\n        const progress = Math.min((now - startTime) / duration, 1);\n        const rate2 = progress * (endRate - startRate) + startRate;\n        emit(\"update:currentRate\", format(parseFloat(rate2.toFixed(1))));\n\n        if (endRate > startRate ? rate2 < endRate : rate2 > endRate) {\n          rafId = raf(animate);\n        }\n      };\n\n      if (props.speed) {\n        if (rafId) {\n          cancelRaf(rafId);\n        }\n\n        rafId = raf(animate);\n      } else {\n        emit(\"update:currentRate\", endRate);\n      }\n    }, {\n      immediate: true\n    });\n\n    const renderHover = () => {\n      const PERIMETER = 3140;\n      const {\n        strokeWidth,\n        currentRate,\n        strokeLinecap\n      } = props;\n      const offset = PERIMETER * currentRate / 100;\n      const color = isObject(props.color) ? `url(#${id})` : props.color;\n      const style = {\n        stroke: color,\n        strokeWidth: `${+strokeWidth + 1}px`,\n        strokeLinecap,\n        strokeDasharray: `${offset}px ${PERIMETER}px`\n      };\n      return _createVNode(\"path\", {\n        \"d\": path.value,\n        \"style\": style,\n        \"class\": bem(\"hover\"),\n        \"stroke\": color\n      }, null);\n    };\n\n    const renderLayer = () => {\n      const style = {\n        fill: props.fill,\n        stroke: props.layerColor,\n        strokeWidth: `${props.strokeWidth}px`\n      };\n      return _createVNode(\"path\", {\n        \"class\": bem(\"layer\"),\n        \"style\": style,\n        \"d\": path.value\n      }, null);\n    };\n\n    const renderGradient = () => {\n      const {\n        color\n      } = props;\n\n      if (!isObject(color)) {\n        return;\n      }\n\n      const Stops = Object.keys(color).sort((a, b) => parseFloat(a) - parseFloat(b)).map((key, index) => _createVNode(\"stop\", {\n        \"key\": index,\n        \"offset\": key,\n        \"stop-color\": color[key]\n      }, null));\n      return _createVNode(\"defs\", null, [_createVNode(\"linearGradient\", {\n        \"id\": id,\n        \"x1\": \"100%\",\n        \"y1\": \"0%\",\n        \"x2\": \"0%\",\n        \"y2\": \"0%\"\n      }, [Stops])]);\n    };\n\n    const renderText = () => {\n      if (slots.default) {\n        return slots.default();\n      }\n\n      if (props.text) {\n        return _createVNode(\"div\", {\n          \"class\": bem(\"text\")\n        }, [props.text]);\n      }\n    };\n\n    return () => _createVNode(\"div\", {\n      \"class\": bem(),\n      \"style\": getSizeStyle(props.size)\n    }, [_createVNode(\"svg\", {\n      \"viewBox\": `0 0 ${viewBoxSize.value} ${viewBoxSize.value}`,\n      \"style\": svgStyle.value\n    }, [renderGradient(), renderLayer(), renderHover()]), renderText()]);\n  }\n\n});\nexport { stdin_default as default };","map":{"version":3,"names":["createVNode","_createVNode","watch","computed","defineComponent","raf","cancelRaf","isObject","truthProp","numericProp","getSizeStyle","makeStringProp","makeNumberProp","makeNumericProp","createNamespace","name","bem","uid","format","rate","Math","min","max","getPath","clockwise","viewBoxSize","sweepFlag","circleProps","text","String","size","fill","speed","color","Object","layerColor","currentRate","strokeWidth","strokeLinecap","startPosition","stdin_default","props","emits","setup","emit","slots","id","path","value","svgStyle","ROTATE_ANGLE_MAP","top","right","bottom","left","angleValue","transform","rafId","startTime","Date","now","startRate","endRate","duration","abs","animate","progress","rate2","parseFloat","toFixed","immediate","renderHover","PERIMETER","offset","style","stroke","strokeDasharray","renderLayer","renderGradient","Stops","keys","sort","a","b","map","key","index","renderText","default"],"sources":["D:/项目/my-blog/node_modules/vant/es/circle/Circle.mjs"],"sourcesContent":["import { createVNode as _createVNode } from \"vue\";\nimport { watch, computed, defineComponent } from \"vue\";\nimport { raf, cancelRaf } from \"@vant/use\";\nimport { isObject, truthProp, numericProp, getSizeStyle, makeStringProp, makeNumberProp, makeNumericProp, createNamespace } from \"../utils/index.mjs\";\nconst [name, bem] = createNamespace(\"circle\");\nlet uid = 0;\nconst format = (rate) => Math.min(Math.max(+rate, 0), 100);\nfunction getPath(clockwise, viewBoxSize) {\n  const sweepFlag = clockwise ? 1 : 0;\n  return `M ${viewBoxSize / 2} ${viewBoxSize / 2} m 0, -500 a 500, 500 0 1, ${sweepFlag} 0, 1000 a 500, 500 0 1, ${sweepFlag} 0, -1000`;\n}\nconst circleProps = {\n  text: String,\n  size: numericProp,\n  fill: makeStringProp(\"none\"),\n  rate: makeNumericProp(100),\n  speed: makeNumericProp(0),\n  color: [String, Object],\n  clockwise: truthProp,\n  layerColor: String,\n  currentRate: makeNumberProp(0),\n  strokeWidth: makeNumericProp(40),\n  strokeLinecap: String,\n  startPosition: makeStringProp(\"top\")\n};\nvar stdin_default = defineComponent({\n  name,\n  props: circleProps,\n  emits: [\"update:currentRate\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const id = `van-circle-${uid++}`;\n    const viewBoxSize = computed(() => +props.strokeWidth + 1e3);\n    const path = computed(() => getPath(props.clockwise, viewBoxSize.value));\n    const svgStyle = computed(() => {\n      const ROTATE_ANGLE_MAP = {\n        top: 0,\n        right: 90,\n        bottom: 180,\n        left: 270\n      };\n      const angleValue = ROTATE_ANGLE_MAP[props.startPosition];\n      if (angleValue) {\n        return {\n          transform: `rotate(${angleValue}deg)`\n        };\n      }\n    });\n    watch(() => props.rate, (rate) => {\n      let rafId;\n      const startTime = Date.now();\n      const startRate = props.currentRate;\n      const endRate = format(rate);\n      const duration = Math.abs((startRate - endRate) * 1e3 / +props.speed);\n      const animate = () => {\n        const now = Date.now();\n        const progress = Math.min((now - startTime) / duration, 1);\n        const rate2 = progress * (endRate - startRate) + startRate;\n        emit(\"update:currentRate\", format(parseFloat(rate2.toFixed(1))));\n        if (endRate > startRate ? rate2 < endRate : rate2 > endRate) {\n          rafId = raf(animate);\n        }\n      };\n      if (props.speed) {\n        if (rafId) {\n          cancelRaf(rafId);\n        }\n        rafId = raf(animate);\n      } else {\n        emit(\"update:currentRate\", endRate);\n      }\n    }, {\n      immediate: true\n    });\n    const renderHover = () => {\n      const PERIMETER = 3140;\n      const {\n        strokeWidth,\n        currentRate,\n        strokeLinecap\n      } = props;\n      const offset = PERIMETER * currentRate / 100;\n      const color = isObject(props.color) ? `url(#${id})` : props.color;\n      const style = {\n        stroke: color,\n        strokeWidth: `${+strokeWidth + 1}px`,\n        strokeLinecap,\n        strokeDasharray: `${offset}px ${PERIMETER}px`\n      };\n      return _createVNode(\"path\", {\n        \"d\": path.value,\n        \"style\": style,\n        \"class\": bem(\"hover\"),\n        \"stroke\": color\n      }, null);\n    };\n    const renderLayer = () => {\n      const style = {\n        fill: props.fill,\n        stroke: props.layerColor,\n        strokeWidth: `${props.strokeWidth}px`\n      };\n      return _createVNode(\"path\", {\n        \"class\": bem(\"layer\"),\n        \"style\": style,\n        \"d\": path.value\n      }, null);\n    };\n    const renderGradient = () => {\n      const {\n        color\n      } = props;\n      if (!isObject(color)) {\n        return;\n      }\n      const Stops = Object.keys(color).sort((a, b) => parseFloat(a) - parseFloat(b)).map((key, index) => _createVNode(\"stop\", {\n        \"key\": index,\n        \"offset\": key,\n        \"stop-color\": color[key]\n      }, null));\n      return _createVNode(\"defs\", null, [_createVNode(\"linearGradient\", {\n        \"id\": id,\n        \"x1\": \"100%\",\n        \"y1\": \"0%\",\n        \"x2\": \"0%\",\n        \"y2\": \"0%\"\n      }, [Stops])]);\n    };\n    const renderText = () => {\n      if (slots.default) {\n        return slots.default();\n      }\n      if (props.text) {\n        return _createVNode(\"div\", {\n          \"class\": bem(\"text\")\n        }, [props.text]);\n      }\n    };\n    return () => _createVNode(\"div\", {\n      \"class\": bem(),\n      \"style\": getSizeStyle(props.size)\n    }, [_createVNode(\"svg\", {\n      \"viewBox\": `0 0 ${viewBoxSize.value} ${viewBoxSize.value}`,\n      \"style\": svgStyle.value\n    }, [renderGradient(), renderLayer(), renderHover()]), renderText()]);\n  }\n});\nexport {\n  stdin_default as default\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}